// Code generated by go-bindata.
// sources:
// message-api-spec/schemas/enumeration.json
// message-api-spec/schemas/header.json
// message-api-spec/schemas/intellectual_asset.json
// message-api-spec/schemas/material_asset.json
// message-api-spec/schemas/research_object.json
// message-api-spec/schemas/types.json
// message-api-spec/messages/body/metadata/create/README.md
// message-api-spec/messages/body/metadata/create/request.json
// message-api-spec/messages/body/metadata/create/request_schema.json
// message-api-spec/messages/body/metadata/delete/README.md
// message-api-spec/messages/body/metadata/delete/request.json
// message-api-spec/messages/body/metadata/delete/request_schema.json
// message-api-spec/messages/body/metadata/read/README.md
// message-api-spec/messages/body/metadata/read/request.json
// message-api-spec/messages/body/metadata/read/request_schema.json
// message-api-spec/messages/body/metadata/read/response.json
// message-api-spec/messages/body/metadata/read/response_schema.json
// message-api-spec/messages/body/metadata/update/README.md
// message-api-spec/messages/body/metadata/update/request.json
// message-api-spec/messages/body/metadata/update/request_schema.json
// message-api-spec/messages/body/vocabulary/patch/README.md
// message-api-spec/messages/body/vocabulary/patch/request.json
// message-api-spec/messages/body/vocabulary/patch/request_schema.json
// message-api-spec/messages/body/vocabulary/read/README.md
// message-api-spec/messages/body/vocabulary/read/request.json
// message-api-spec/messages/body/vocabulary/read/request_schema.json
// message-api-spec/messages/body/vocabulary/read/response.json
// message-api-spec/messages/body/vocabulary/read/response_schema.json
// message-api-spec/messages/header/header.json
// message-api-spec/messages/header/header_schema.json
// message-api-spec/messages/message.json
// message-api-spec/messages/message_schema.json
// DO NOT EDIT!

package specdata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _schemasEnumerationJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x58\x4f\x6f\x23\xbb\x0d\xbf\xef\xa7\x30\xdc\x1e\xfb\xe2\xfe\x7b\x3d\xe4\x96\x4d\x36\x5d\xa3\x9b\xd8\xb0\x93\xbc\x02\x45\x0f\xb4\xc4\x99\xe1\x46\x23\xa9\x94\x64\xc7\x28\xde\x77\x2f\x34\x63\x2f\x86\x1a\x3b\x4e\xdf\xc1\x30\xf4\x23\xc5\x7f\xa2\x48\x6a\xfe\xfb\x69\x32\x99\x92\x9e\x5e\x4f\xa6\x4d\x8c\x3e\x5c\xcf\x66\xbb\xdd\xee\xea\x3b\x05\x75\x05\xea\x2a\xbd\xce\x58\x87\x30\x0b\xaa\xc1\x16\x66\x68\x53\x8b\x0c\x91\x9c\xbd\xfa\x1e\x9c\x9d\xfd\x6e\xfa\x87\x2c\xe0\xf7\x3d\xfd\x28\xe5\x7a\x36\xcb\xd4\x9f\x7a\xf4\xca\x71\x3d\xd3\x0c\x55\xfc\xe9\x8f\x7f\x3d\x48\x3a\xec\xd3\x58\x91\xa5\x2c\x2e\x4c\xaf\x27\xd9\x96\xc9\x64\x0a\x4a\x61\x08\x4f\x7b\x8f\x3f\xb0\xc9\x64\x9a\x55\x4f\xaf\x27\xff\x3a\xac\x27\x93\xa9\xf3\x68\x3b\x31\x87\x75\x80\x0a\xeb\x04\xac\x51\x0f\x61\xe5\x6c\x64\x67\x8c\x44\x19\x43\x64\x52\xb1\xe0\x35\x2e\xa0\x9e\x1e\x80\x7f\x77\xff\xbf\xf6\xf4\xa9\x6a\x50\xbd\x86\xd4\x5e\x36\xac\xd5\x3f\x0b\xbb\x1a\xf8\xf3\xcf\x7f\x3b\x2d\x54\x43\xc4\xcb\x02\x73\x44\x7c\x61\x2a\x78\xcf\x6e\x5b\x60\x5b\x20\x03\x1b\x83\xd2\x7f\xbf\x67\xaa\x9b\xd2\xd5\x1c\x92\x91\xff\x8c\x50\x40\x14\x42\x92\x48\xeb\x34\x55\x24\x31\xef\x42\xb1\xcf\xa7\x8d\xa1\xd0\x9c\x8b\x26\xea\xb4\x44\x0e\xce\xae\x95\xf3\xa8\x6f\xaa\x8a\x0c\x75\x89\xf5\x7e\x28\x42\x4c\x1a\x6d\x14\xf1\x8d\x50\x55\x43\xa0\x02\x95\x4c\xdc\x0f\x21\x6c\xbd\x71\x7b\x14\x81\x69\xb1\xdd\x20\x8b\xf8\x1d\xac\x10\x6c\x60\x52\x3b\x5c\x1b\xda\x30\xf0\xfe\x17\x30\xaf\x73\x7b\xda\xb9\x8a\x0c\x3e\x87\x4b\xe9\xcb\x54\x93\x05\x73\x4f\xf2\xbc\x62\x93\xda\x8d\x05\x32\xf3\x16\x6a\x41\xc1\xb7\xc8\x90\x8f\xec\x09\xdf\x44\x04\x3c\x63\x40\xde\x76\xe1\x7b\x80\x10\x91\x4b\xa1\x64\x23\x72\x8b\x3a\x3b\x57\xd2\xf2\x56\x52\x23\x38\x32\xd8\xa0\x98\x7c\x3c\xed\x24\xe5\x73\xc8\x89\xc0\x97\x13\xf8\x66\xf5\x0f\x11\x52\xfe\x27\x6d\x87\xc0\x86\x36\xca\x69\xa1\xfe\x6e\x31\x1f\x2e\xbf\xdc\x3c\xfe\xe9\x2f\x02\x98\xaf\xd7\x8f\x43\xe0\x2b\x58\x2d\x3d\x98\xaf\x3f\x3f\xca\xf5\xba\x58\x3f\xdd\x0e\xd7\xdf\x4a\x86\x6f\xeb\xf9\xdd\x70\xbd\x7c\x28\xd6\xcf\xe5\x7a\xf5\x6d\xb8\x5e\xbb\xc4\x0a\x25\xcf\xf3\x52\xe8\x2c\x76\x3c\xaf\x1e\x4f\x47\xbb\xc5\x10\xa0\xc6\x5b\x03\x21\xbc\x1f\xeb\x5b\xd7\xb6\x60\xc5\x5d\xfc\xb2\x2d\xae\xcc\x9d\x53\xa9\xcd\xd8\x7b\xba\x2e\x1f\xeb\x03\x46\xd0\x10\xe1\xb6\x2b\x1b\x43\x05\x47\xca\xb3\xd7\x67\x28\x77\x68\xf0\x34\x65\x85\x20\xac\x7f\x71\x0a\x36\xc9\x00\xef\xcf\x53\x96\x10\x55\x73\xda\x1b\xb7\xf9\x8e\x2a\xbe\x80\x49\x17\xbc\xb1\x8e\x5b\x30\x43\xf9\x0d\xd5\xcd\x70\xbd\x45\xde\x7f\xcd\xd8\x69\x45\x5c\x83\xa5\xd0\xdd\xc2\x95\x33\x17\xb4\x55\xc9\x6a\x59\x7d\x1a\x17\x22\xd9\x7a\x6e\x43\xa4\x98\xba\x52\x38\x6c\x58\xb9\x84\x87\xaf\xce\x14\xbb\x82\x77\x36\x38\x3e\x55\x7a\x59\x36\xbc\x9a\x42\xec\x7b\xf7\x4d\x8d\x56\xed\xcf\x52\x53\x6c\x1c\x93\x2c\xa0\x3a\x93\x69\x93\xa2\x54\x05\x7a\xeb\x14\x48\x59\xd0\xed\xbf\x1c\xa3\xcb\xf9\xa5\x1a\x28\xed\x50\xae\x6d\x91\x15\xc9\x83\x1a\x07\xb3\x4a\x1c\x1b\xe4\x2f\x3a\x29\x28\x43\x59\xbb\x2d\xb2\x6d\x8b\x3b\xd1\x20\x98\xd8\x48\x84\x29\x16\x35\x38\xa7\xc4\x19\xb1\x2e\x16\x21\xf7\xec\x2a\x0c\x81\x9c\x05\xf3\xd9\xe9\x22\xe0\x01\x81\x95\xd0\x17\x54\xe3\x9c\xf0\x2b\xbc\x92\x31\x41\x56\x4a\x63\xc8\xd6\xc5\xd1\x78\x03\xfb\xd3\x01\xf7\x5d\x93\x9d\xff\x1f\xb5\x7a\xb1\xba\x95\x15\xeb\x7e\x71\x73\x3f\x5c\x3f\xed\x28\x46\xe9\xe9\x8f\x6e\xfe\x04\x5c\x63\x44\x2d\x25\xfc\x20\x2f\x99\xac\x22\x6f\xf0\x11\x5a\x7c\xcf\xe0\xcb\xf7\x07\x74\x4b\xb6\xcf\x59\x99\x92\x79\xde\x03\x15\x7b\x85\x22\x4e\x10\xe1\xc6\x82\xd9\x07\x69\x7c\x57\xc1\xfa\x69\xc8\x8d\x09\xb9\xb4\x8d\xe1\x07\xb0\x50\x97\x31\xa0\x82\x91\xec\x16\x43\xa4\xba\x14\xe0\xd9\xe9\xa4\x46\xb9\x92\xcb\xd4\x37\x84\x22\x91\x4f\x5e\xe6\x03\xf7\xc3\x68\x82\x61\x34\x79\x80\x1b\x3b\x7f\xcc\xb7\x92\xfd\x88\xfe\x9d\x5d\xf2\xbf\xb1\xde\x84\xe4\xf3\x08\x51\xa0\xa3\xeb\x70\xa8\x0b\xc3\x48\xa2\x77\x81\x72\xd1\x7b\xce\x67\x72\x3a\x1f\x06\xb3\x4d\xd7\xc7\x3e\x50\x36\xc0\xc7\xc4\xc5\x10\xdc\x66\x41\xa1\xb8\xb2\xdd\xbc\x5b\x60\x1a\xfb\x07\xc8\x08\x3e\x23\x43\xa3\xe2\xbd\x1f\x4b\x31\x38\xc2\xa8\xa6\x08\x66\x4d\xb5\x85\x6c\xe0\x0b\x18\xd2\x63\xfd\x6e\x67\x8d\x93\x8d\xae\xa2\x37\x8a\xfb\xdb\xfc\x02\x91\x09\x56\xe7\x04\x93\xfb\x0f\xdd\xfb\x8e\x32\xed\x16\x8c\x4a\x66\xa4\xa3\xa5\x9a\x47\x60\xdf\xff\x0e\xc5\x59\x66\x89\x37\x34\xae\x77\x69\xd4\xdb\xb7\x27\x1d\xda\x12\xa7\xd0\xdb\x7e\xf2\x84\xbb\x9c\xfd\x58\x3f\xa0\x88\x41\x3e\x4e\x6e\x29\xa2\xfe\xbc\x97\xe0\x3a\x79\x6f\x30\x17\xf8\x27\x77\x8e\x52\xee\xca\x65\x83\x6c\x1a\xc9\x3f\xc0\x05\x77\x03\xe1\x38\xae\x48\xfe\x23\x7a\x5f\x94\x82\xf0\x88\xbb\x17\xe4\x9c\x3c\x8b\x4a\x52\x96\x8c\x5b\x72\x29\x9c\x23\x03\x47\x89\x35\xd0\x81\x92\x6d\x85\x15\x32\x5a\x55\x5a\xca\x47\xbc\x70\xec\x38\x02\x96\xfc\xfa\x80\x8f\xe2\xd0\x7a\x32\xe3\xa0\x75\x68\xc1\xfb\x02\x4c\x60\xe3\xbd\xe3\xb6\x74\x66\x71\x7c\xf4\x9c\xa0\xf5\x4d\x4a\x81\x29\x0f\x6d\x85\x5b\xc2\xdd\xd8\xb1\x8c\x96\x5e\x21\xd3\x16\xf5\x3d\xbb\xb6\x38\xf8\x6e\x14\x2f\x55\xe6\x59\x19\x6d\x5c\xd8\x22\xbc\x07\xbc\x34\xc3\x9b\xbd\xb4\xad\x81\x1e\x15\x1d\x1a\x02\xea\x85\xbd\x2b\x52\xa3\x63\xed\x8a\xf3\x03\x44\xe4\x62\x80\xa1\xf0\xb9\xdf\x36\x02\x29\x14\xa9\xc4\xf8\x9f\x44\x5c\xc6\x7c\xd5\xa3\xe3\x34\x5d\x02\x8f\x3c\xe9\xb1\x45\x75\xee\x3e\x86\x2e\x58\x1f\xf8\x2e\xc1\xf1\x0e\x03\xd5\x76\x1e\xb1\x95\x0f\xbc\x48\x4a\x3e\xc6\x20\x69\x12\xb1\xdb\x38\xf7\x5a\xae\xd7\xa8\xca\xea\xa1\x9c\x3d\x24\xf0\x2f\x8e\x5f\x43\xe3\x7c\xa9\x2c\x5f\xb7\x80\xc2\x45\x7c\x83\x76\x09\x5e\xf6\x1f\x2a\xdf\xd3\xdf\x5d\x62\x2b\xcf\xc1\x20\xb0\x25\x5b\x2f\xba\x47\x83\x28\x99\x6e\x9b\x87\xf3\x52\x46\x9b\x02\xa9\x7c\x39\xba\x46\x76\x69\x20\x84\x58\x9c\x85\x47\xae\x72\xd9\xb5\x0a\x65\x7f\x47\xcf\x24\x59\x19\xbd\xe3\x38\xbe\x01\xa2\x13\x37\x6e\xf7\xe5\xad\xa1\xcd\xc8\x96\xe0\xaa\xb8\x03\xd9\x14\x63\xf1\x19\x21\x36\x18\x28\xdc\x51\x08\xc8\x71\x5c\xee\xed\xab\x75\x3b\x01\xed\x70\x13\x48\xb6\x80\x9d\xe3\xd7\xca\x38\x61\x55\x4e\x4d\x7f\xfe\xb9\x19\xa2\x63\xa8\x71\x1d\x21\xa6\x0b\x6f\x5b\x67\x0d\x59\xa1\xcf\x22\x70\x89\xb9\xaa\xea\xa0\xf7\xb4\x5d\x4e\xee\xb5\xf8\xdc\xf0\xf5\xe9\x69\x79\x5a\x60\xf2\xb9\x5b\x7f\xc4\xfa\x1f\x9c\x5c\x7c\x2b\xeb\x09\x39\x8b\xca\x37\x71\x4f\xb9\xd9\xb8\x6e\x8b\xd4\xff\x29\xff\x7e\xfd\xf4\xbf\x00\x00\x00\xff\xff\x09\x71\xb2\xd3\xc2\x15\x00\x00")

func schemasEnumerationJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasEnumerationJson,
		"schemas/enumeration.json",
	)
}

func schemasEnumerationJson() (*asset, error) {
	bytes, err := schemasEnumerationJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/enumeration.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasHeaderJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\xc1\x6e\xdb\x30\x0c\xbd\xe7\x2b\x0c\x6f\xc7\x36\xda\x61\xa7\xdc\x86\x6e\x40\x7b\xda\x80\x16\xbb\x0c\xc5\xa0\x5a\x8c\xc3\xce\x96\x1c\x52\x5a\x16\x0c\xf9\xf7\x41\x8e\xe3\x38\x8d\xe4\x24\xf0\x9c\x4b\x8b\xd0\xe6\xe3\x23\x1f\xf5\xac\xbf\x93\x24\x49\x51\xa5\xb3\x24\x5d\x58\x5b\xf1\x4c\x88\xd5\x6a\x35\x7d\x45\xce\xa6\x32\x9b\xba\x5f\x82\x14\xb3\xe0\x6c\x01\xa5\x14\x25\x30\xcb\x1c\x58\x2c\x40\x2a\xa0\xe6\xdf\xcf\xed\xd3\xe9\x2b\x1b\x2d\xde\xa5\x37\x1e\xf2\xfd\x36\xb6\xc3\x9d\x09\xe1\x9f\xde\x36\x6f\x1a\xca\x85\x22\x39\xb7\xb7\x1f\x3e\x36\xd8\x4d\x9e\x82\x39\x6a\xb4\x68\x34\xa7\xb3\xc4\xb3\x4b\x92\x74\x5b\xa6\xfd\x9d\x24\xa9\x5d\x57\xe0\xb1\xcd\xcb\x2b\x64\xb6\x4e\xad\xe3\x15\x99\x0a\xc8\x22\x70\xe7\xed\x24\x49\x1b\xe2\x0f\xea\x20\xec\x79\x12\xcc\xcf\x6c\xde\xd7\xe4\xa6\x49\xd1\xe1\x29\x9c\x43\x95\xb6\xa0\x9b\x9b\x7d\xd9\xcc\x10\x41\x21\xfd\x6b\xd7\x2e\xdd\x74\x7c\x57\x48\xe6\x01\x95\x41\xbb\x12\xa8\xee\x20\x54\xff\xa0\x4a\x1f\x8f\xa7\xad\x60\xe3\xd2\xa8\x8b\x04\x59\x10\x58\x47\xfa\x93\x52\x04\x83\xc6\x11\x15\x42\x1b\xfd\xa5\xac\xec\xfa\xd1\x12\xea\xbc\x7f\x14\x58\xa2\xce\xa3\x2c\xc2\x9d\x35\x39\x7d\xb8\x8f\xb0\x74\xa0\xb3\xe8\x98\x83\xc0\x6d\x52\x1f\xf2\x3d\xb2\x35\xb4\xbe\x08\x78\x97\x13\xc4\xfd\x0d\xc4\x68\xf4\x18\x42\x30\x94\xdf\x81\xc2\x65\x81\xc8\xd0\x9d\x51\x43\x36\x71\xd0\x06\xd4\x04\x3e\x03\x67\x84\x95\x1d\x69\x00\xe7\xf0\xc8\x41\xfb\xd3\x64\xe8\xaa\x04\x26\x6f\x88\xa4\x04\x4b\x87\x04\xde\x19\x7f\x84\xbc\x3a\x66\x67\x11\x7b\x89\x1f\xb5\x9e\xc3\x12\xd8\xca\xe0\xa0\x9a\xd8\x73\x4b\x5e\x2a\x55\x37\x2c\x8b\x6f\xdd\x8f\xce\x5c\x16\x0c\x93\x4e\x9f\xf1\x63\x7f\xf1\x57\xac\x72\x2f\x05\xf2\x02\xd4\x13\x96\xc0\x56\x96\xd5\x18\xfa\xd9\x16\x3c\xbc\xc3\x7f\x2a\xdc\x3a\xf1\xd5\x59\x9c\xb9\x40\x81\x31\x9d\xe0\x3f\x58\xdc\x80\xf7\x5e\xac\x2e\x9f\xf0\xef\x71\xee\x09\x95\x61\x0c\x59\xd1\x8e\x3d\x6a\x0b\x79\xcc\x50\xad\xb1\xb2\x38\x3f\xf3\x4c\xfd\x38\x70\x36\x5b\x9a\x47\xd5\x07\x6b\x77\xfc\x75\x6b\x5b\x90\x44\x72\xbd\x57\xce\x69\x5c\x3a\x78\xb0\x50\x7a\x40\x4b\x0e\xda\x47\xd8\x04\x3b\x7a\x46\xf4\x8f\x6f\x80\xa7\x24\xb3\x05\xea\xe3\x7b\xea\xc8\xd6\x7c\xa0\xea\x9e\x46\xf8\xbe\xf4\x9f\xb8\x60\xf5\x95\xee\x0d\x5b\x2d\x4b\x88\x33\xb1\x11\x8f\x19\xcf\x65\xf6\x7b\xfa\xf6\x0a\x19\xd8\xd5\x03\xc9\xfa\x46\x18\x69\xaa\x8d\x3e\x77\x2a\x9d\x5c\xe0\x1d\x45\xff\x77\x33\xd9\x4c\xfe\x05\x00\x00\xff\xff\x70\x1c\xb9\xc5\xc5\x0d\x00\x00")

func schemasHeaderJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasHeaderJson,
		"schemas/header.json",
	)
}

func schemasHeaderJson() (*asset, error) {
	bytes, err := schemasHeaderJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/header.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasIntellectual_assetJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\xcd\x6e\xdb\x46\x10\xbe\xfb\x29\x08\xb6\x47\x47\xac\xdb\x02\x2d\x7c\x2b\x64\xbb\x0d\x60\x17\x46\x1c\xf7\x52\x14\xc1\x88\x1c\x49\xeb\x90\xbb\xcc\xec\xd0\xaa\x5b\xf8\xdd\x03\x2e\x29\x8b\x7f\x4b\x52\xa2\x45\x3a\x87\x1c\x4c\x72\x67\xbe\x99\xf9\xe6\x6f\x95\xff\x4f\x1c\xc7\x15\x81\x7b\xee\xb8\x6b\xe6\x58\x9f\x7b\xde\x66\xb3\x99\x3d\x08\xed\xcf\xc0\x9f\x25\x9f\x3d\x0a\xb4\xf6\xb4\xbf\xc6\x08\x3c\x21\x19\xc3\x10\x7d\x4e\x20\xfc\x04\x5a\x23\xcf\x1e\xb4\x92\xde\x77\xee\x69\x2a\xe7\xfb\xec\xb3\xad\xb0\x73\xcf\x4b\xdf\xbe\xcb\x9e\xce\x14\xad\xbc\x80\x60\xc9\xef\x7e\xf8\x39\x17\x98\x9f\x0b\x70\x29\xa4\x60\xa1\xa4\x76\xcf\x9d\x14\x92\xe3\xb8\x4b\x11\xe2\xcb\x5f\x8e\xe3\xf2\x53\x9c\xfe\xed\xaa\xc5\x03\xfa\x6c\x0e\x9a\xe7\x31\xa9\x18\x89\x05\xea\xc2\xd7\xf9\xf9\xfb\xc4\x98\xb6\x7b\x9a\x82\x24\x5c\xf6\x34\x37\x55\xa9\x73\x0b\xbd\x02\x48\x2f\x49\xe5\xbe\x08\x7d\x3e\x2d\x6b\x7d\x1f\xa0\x64\xb1\x14\x48\xc7\xd0\x2d\x95\xbc\x8c\x62\x7e\xba\x63\x12\x72\x65\x47\xf1\x27\x44\x38\xa5\xfe\x3b\xf1\x5f\x4d\xff\x36\x86\x29\x8f\x56\x48\xf6\xc3\xd7\xb0\xc0\x70\x4a\xf4\x17\xc0\x38\x27\x04\xc6\x21\x04\x22\xd4\x08\xe4\xaf\x3f\x65\xa4\x6d\x02\x14\x00\xa3\x1d\xc6\x07\xb1\x5a\xb3\x3e\x2e\x02\xca\x74\x58\x31\xcc\xd7\xe8\x7f\xd6\x49\x64\x0b\x26\x10\xc1\x93\x7b\x5a\x7c\x95\x48\xf1\x25\xc1\xf7\x8c\x51\x8a\x9d\x29\xc1\xd2\x6b\x91\xbf\x28\x8a\x2b\x98\x55\x86\xe7\x6f\xd5\x17\x3e\x7e\x2e\x89\x8b\x84\xdc\xaa\x3a\xb3\x5a\x71\xa5\x28\x02\xfe\x98\x61\x9e\x8c\x56\x73\x15\xc5\x4a\x9b\x43\xd7\xf8\x38\x2d\xc5\xff\x00\x7d\x23\x22\x6c\x72\xc9\x36\xb4\x0b\xa5\x42\x04\xd9\x9e\x26\x37\x2a\x48\x8b\x5d\x2d\x4f\x8e\xc6\x8f\x63\x24\xde\x41\x9c\xba\x6d\x68\x2f\x53\x5a\xbd\x37\x25\x1c\xe7\xd9\x6a\xdc\xbd\xee\x2c\xdf\x55\x8f\x89\xc8\x54\x89\xb3\xf2\x73\xf8\x37\x7f\xfe\x8b\xdd\x91\x69\xbc\xe8\x11\x52\xb4\x97\x8f\x28\x79\xa2\x5a\x13\xd7\x70\x0c\x23\xc8\x7d\x1c\x2a\x08\xee\x18\x38\xa9\x15\xf1\x81\xce\xfc\xc9\xde\x78\x59\x11\xac\x70\x64\xad\xd7\xa0\xf9\x42\x6d\x64\x6a\xf0\xb4\x3d\xf3\x23\xfa\x6b\x29\x7c\x08\x7f\x63\x26\xb1\x48\x18\xad\x5e\xf8\xe6\x93\x34\x8f\xf5\xb5\xf2\x0d\x67\x6d\x76\xea\x4c\x64\xc9\x92\xa5\x69\x88\xe9\xdb\x84\x44\xcb\x18\x97\x69\xb8\x0d\x81\xd3\x13\xb6\xc0\x96\x4d\xd1\x95\x43\x27\x55\x4b\x5e\xb4\xb8\x84\x5f\x12\x41\x86\x31\x7f\x37\x0c\xef\xf6\xd1\xba\x69\xdc\x6d\x1a\x41\x6d\xd3\x4c\x57\x67\x6e\xeb\x74\x0d\xa5\xb2\xb3\xa2\xb5\x95\x86\xd6\x0c\xee\x08\x79\x47\xbc\xf2\xb7\xff\xbc\x38\x1c\x82\xc0\x58\x09\xe1\x6d\x71\x73\x5a\x42\xa8\xf1\xa4\x10\x1b\xb7\x1a\xc4\x01\xbb\x58\x45\xd4\xf8\x6b\x59\x05\xc0\x94\xbb\x51\x05\x4a\xdb\xf8\x75\x60\x91\xfe\xb1\x8f\xde\xb9\xd2\xb5\x2e\x7b\x54\x17\xf4\xcc\xfc\x26\xaa\x74\x04\xb2\xc3\xb9\x1d\x3e\x38\x3c\x41\xfc\xfa\x62\xb4\x77\x66\x6c\x65\x8c\x9f\x12\x5b\xcd\xa3\x11\x70\xab\xf0\x2f\x08\x93\x71\xb3\xaf\x27\xf5\x4a\xb1\xb0\x79\xca\x6a\xd0\xe1\x3c\xaa\x4f\x9d\x03\x08\x55\x13\x36\xbe\xbb\x4f\x5b\xd0\x1c\x81\x6d\x67\xbf\xf6\x53\x7d\x81\x0c\x62\xdc\x8d\xbb\x27\xf1\x2c\x31\xeb\xf4\xe3\x00\xca\x21\x45\x42\xeb\xf2\xc8\xb8\x37\xd7\x08\xc1\xba\xff\xb6\x5e\x1d\x6c\x48\xf0\x61\x97\x0e\xbe\x92\x4c\xaa\x16\xc5\x5e\x67\x21\x8e\x51\xee\x01\xb8\x67\xf4\x8c\x17\x6a\xc6\x35\x60\xae\x43\x39\x3c\x80\x66\xc6\x7c\x95\x20\x36\x52\xc1\x69\xd9\x91\x77\xdf\x5b\x97\x86\x7e\x92\xcc\x97\xfb\x27\xcb\x4e\x7f\x55\xeb\xe1\xee\x5c\x91\x4a\xe2\x21\x5e\x34\x02\xc6\x6f\xe2\x46\xed\x94\xd3\xac\x01\x30\xfd\x0f\x1e\x06\xc6\x95\x2d\x27\x9c\x11\xaf\x90\x2a\x89\x59\x38\xb2\xe7\xfd\x91\x31\xe9\x06\xa3\x05\xd2\x9b\xba\xbf\x88\x80\x91\x44\xe5\xf7\xbf\x6a\x85\xd0\x15\xd3\xf7\xce\xf2\x5d\x3e\x35\xb2\xbd\x85\x81\x1d\xac\x18\x52\x23\x60\xd8\x68\x66\x04\x4c\x51\x23\x40\xf2\x5b\x48\x51\x90\x7c\x95\xc8\x60\x10\x84\x1e\xb7\x83\x8a\x56\x20\x85\x36\xb3\xd2\x07\x15\x5a\x6e\x0a\x0d\x9c\x3b\x06\x1a\xb2\x05\x0f\xba\xab\x34\x08\x2e\xeb\x03\xc9\xa8\xfa\xdf\xec\x32\xb6\x4b\x96\x16\x2a\x5b\xe8\xd5\x1c\xe6\x26\xd7\x0f\x59\xda\x94\xc9\xfa\x41\xab\x9a\x11\x31\x7e\x45\xc8\x15\xdb\x6b\xc2\xb7\x76\x3f\xbe\x5f\x67\xcd\xcd\x9f\x72\x6c\xca\x21\x5c\xa0\xf6\x49\xc4\x4d\x57\xf7\x23\x23\x99\x2b\xf3\xff\x7a\xc6\x9c\x9b\x5e\xa7\xbe\xf9\x3b\xe0\x83\x19\xf1\x7b\x65\x0b\x38\xae\xfd\x65\x3b\xb2\x0d\xe4\x15\x4c\x80\xc9\x7e\x3d\xcd\x06\xa4\xe6\xb1\xaf\x8e\x74\xd2\xde\x9b\x63\x18\xbb\xfb\xf6\x5d\x71\x0b\x8d\xa1\xb5\x6c\x5b\x8a\x5a\x7b\xa1\x69\x4d\x7e\x5b\x52\xd8\xe2\xd7\xec\xd3\x03\xda\xea\x49\xfa\xef\xf9\xe4\x6b\x00\x00\x00\xff\xff\xd2\xf5\xe4\x8c\x90\x28\x00\x00")

func schemasIntellectual_assetJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasIntellectual_assetJson,
		"schemas/intellectual_asset.json",
	)
}

func schemasIntellectual_assetJson() (*asset, error) {
	bytes, err := schemasIntellectual_assetJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/intellectual_asset.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasMaterial_assetJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x4d\x6f\x1a\x31\x10\xbd\xf3\x2b\x56\x6e\x8e\x04\x37\x51\x23\x55\xdc\xa2\x2a\xaa\xa8\xd4\xb4\x52\x92\x5e\xaa\xaa\x72\xf0\x2c\x0c\x5d\xdb\x1b\x7f\x94\xa2\x8a\xff\x5e\x99\x05\xe2\xfd\xc0\xdb\xb0\x09\xe4\xc0\xc5\xb3\x7e\xf3\x66\xe6\x79\x66\xf8\xdb\x4b\x12\x82\x9c\x0c\x13\x32\xb5\x36\x37\x43\x4a\xe7\xf3\xf9\x60\x86\x66\x3c\x60\xe3\x81\xfb\x45\x35\x37\x86\x9a\xf1\x14\x04\xa3\x82\x59\xd0\xc8\xb2\x9f\xcc\x18\xb0\x83\x99\x51\x92\xbe\x21\x7d\x8f\x71\x52\x7c\xb2\x01\x1a\x52\xea\xad\xa7\xc5\xe9\x40\xe9\x09\xe5\x9a\xa5\xf6\xf4\xed\xbb\x35\xd8\xfa\x1e\x87\x14\x25\x5a\x54\xd2\x90\x61\xe2\xe9\x24\x09\x51\x7a\xc2\x24\x1a\xe6\x8f\xb7\xa7\x49\x42\xec\x22\x07\xef\x41\xdd\xcf\x60\x6c\x57\x00\xab\xf3\x5c\xab\x1c\xb4\x45\x30\xc1\xd7\x15\x9c\x4f\x68\xc6\x23\x5e\xb2\x07\x88\x28\x2d\x4c\x40\x93\xad\x6d\xd9\x6f\x86\xb9\x66\x02\xaa\x20\x27\x1a\xd2\xff\xcc\xa0\xf7\x67\xd6\x89\xa3\x41\xec\x54\x2a\x79\x25\x72\xbb\xb8\xb1\x1a\xe5\xa4\x9d\xc7\x6d\x41\x3c\x1a\x4c\x3f\x34\x0a\x94\x28\x9c\x20\xc3\xe4\xac\x7c\xce\xfe\x6c\xce\x2f\x5a\xbd\x5e\x72\xae\xc1\x98\x83\x26\xa0\x57\xa1\x44\x34\x3c\x38\xd4\xe0\x6b\xf9\x3d\x5a\xeb\x58\x09\x63\x69\x6d\x09\x7e\x6d\xfd\xb1\x25\xc4\x38\x5f\x05\xc1\xb2\xaf\xa1\x10\x53\x96\x19\xe8\x05\xdc\x49\x0e\xda\x74\x53\x74\x81\x70\xe7\xb0\xa6\xe4\xe7\xa8\x81\xf3\xb8\x8d\x22\x28\xfc\x8e\x38\x48\x8b\x29\x82\xde\x25\x3d\xa6\x35\x5b\x94\x85\xe7\x24\x3e\x38\x18\x59\x10\x3e\x16\xab\x1d\x94\xcc\xb8\x36\x84\x70\x41\x38\x65\x82\x35\x1a\xc1\xa5\x65\x55\xee\x1b\x97\x67\x91\x88\xae\xa4\x45\x9b\x81\x00\x69\x5f\x3c\xa4\xd8\xf3\xdc\xfd\x40\x4b\x4f\xf4\xfc\xbc\x6b\xc0\x97\x69\x8a\x19\x56\x3b\xeb\xab\x0d\xf8\x7d\xd7\x78\x3f\xe2\x6f\x38\x6a\xd3\x2e\x68\x7c\xa8\x65\xfb\xb0\xfe\x6f\x8e\xec\xff\x16\x32\xc8\xa7\x4a\xc2\xb5\x13\xf7\xf5\xf6\x71\x58\x32\x9f\x19\x66\xbb\xc4\x6f\x8a\xdb\x25\xa9\xa5\x4a\x0b\xe6\xfb\x03\x01\xe1\xaf\x46\xa0\xbf\x04\xf3\xe2\x4e\x62\xad\xa9\x34\xb7\x35\x55\xbd\xf5\xe4\xe9\x17\xcc\x85\x58\xd7\x8e\xf6\xbf\x68\xaf\x88\x3c\xac\x26\xb1\x37\x09\xb0\x55\x14\xcd\x85\x6a\xcf\xf1\xfe\x03\xb9\x96\xf8\x67\x5a\x36\x3d\xd6\xe1\x87\x74\x95\xc1\x6b\xd9\x55\x9f\xfe\x08\xba\xad\x7f\xdb\xec\xb7\xe5\x66\x17\xdf\xae\x1b\x5e\xe3\x9e\xb4\xe7\xae\xf7\x88\xf5\x8d\x65\xee\xc8\x63\xec\x91\xcc\x0b\xfc\xff\xb8\xd8\xb3\xeb\x55\x33\xd4\xc6\x7a\x8f\xea\xf6\xfc\x6f\xd9\xfb\x17\x00\x00\xff\xff\x33\xd2\x66\x0a\x2e\x0f\x00\x00")

func schemasMaterial_assetJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasMaterial_assetJson,
		"schemas/material_asset.json",
	)
}

func schemasMaterial_assetJson() (*asset, error) {
	bytes, err := schemasMaterial_assetJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/material_asset.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasResearch_objectJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x59\xdb\x6e\xda\x4c\x10\xbe\xe7\x29\x2c\xff\xff\x25\xc1\x39\xb4\x6a\xc5\x6d\x9b\xaa\x51\xa5\x26\x22\x69\x6f\xaa\x2a\xda\xda\x03\x6c\x6a\xef\x3a\xb3\xeb\x50\x54\xf1\xee\xd5\x62\x83\x0f\xd8\x0b\x6b\x62\x1b\xb8\x88\x14\x7c\x98\xf9\x66\xbe\x39\x79\xf6\x6f\xcf\xb2\x6c\xea\xd9\x43\xcb\x9e\x4a\x19\x8a\xa1\xe3\xcc\x66\xb3\xc1\x13\x15\xee\x80\xb8\x83\xe8\xb7\x83\x9e\x10\x8e\x70\xa7\x10\x10\x07\x41\x00\x41\x77\xfa\xc8\x7f\x3d\x81\x2b\x07\x4f\x82\x33\xe7\x3f\xbb\xaf\x84\xfc\x1f\x3f\xb3\x92\x34\x74\x1c\x75\xf7\x2c\xbe\x3a\xe0\x38\x71\x3c\x24\x63\x79\x76\xfe\x26\x91\x96\xbc\xe7\xc1\x98\x32\x2a\x29\x67\xc2\x1e\x5a\x0a\x8f\x65\xd9\xb1\xfc\xf5\x6f\xcb\xb2\xe5\x3c\x04\x25\x3b\xb9\xd3\x5f\x5d\x0f\x91\x87\x80\x92\x82\xc8\x3c\xbd\x96\xf0\x2d\x5a\xda\x96\x5e\x57\x40\x11\xc6\x3b\xda\xab\x94\x8a\xc4\x4a\x27\x03\xd4\x89\x94\xdc\xb5\xd0\x45\xbf\xa8\xf7\x81\x4a\x1f\x9a\x50\xcc\x38\xbb\x0e\x42\x39\xbf\x97\x48\xd9\x44\x07\xe1\x0e\x50\x70\x36\xe2\x9b\x38\x56\xae\x24\x88\x64\x6e\xf7\xb3\xb7\x22\x46\x9f\x23\xb8\x91\x10\x28\x77\x4a\x8c\x20\x77\x9b\x26\x37\xb2\xe2\x32\x86\xe5\xa1\x86\x29\x80\xcc\xe3\x8b\x9c\xc0\x80\xb2\x95\xb2\x0b\x8d\x2d\x1f\x41\xb8\x48\x43\x25\xb7\x5b\xa7\x8e\xe8\x64\x2a\x8b\x1e\x68\xcb\xa1\x18\x2b\xdf\xdb\x99\x44\x76\x15\x12\x9e\x52\xbd\x2f\xfe\x2f\x30\x9f\x71\xf4\xda\x63\xa1\x89\xd0\xb2\xac\x85\xc6\xc4\x0f\x44\xc2\x84\xe3\xfc\x84\x4d\x1c\x81\xe0\x11\xba\xf0\x10\x9b\x54\x6a\x26\x65\x12\x26\x80\x76\x31\x4a\x68\x10\x05\x2a\x48\xf2\xd7\xc9\x9f\xe4\xfa\xe5\x7b\x8d\xde\xef\xc4\x8f\x5e\x5b\xe1\x95\x46\xdf\x8d\x07\x4c\xd2\x31\x05\xec\x28\xe7\x68\x0a\x60\xdf\xcc\x1b\x81\x4f\x24\x78\x87\x6a\x92\x06\xf9\x2d\x4e\x08\xa3\x82\xa8\xf7\x3b\x6c\x89\xbc\x08\x63\x5f\x46\xee\xd4\x44\x86\x2f\x4b\x81\xd7\x2f\xc0\xe4\x21\x55\x0c\x95\x4d\xbe\x0f\xae\x8c\x88\xff\x48\x84\x00\x59\x56\x3e\xc2\x0d\x13\x76\xe4\xf4\x13\x6d\x91\xc7\x57\x33\x77\x4c\x0b\xb4\xf7\x8a\xff\xad\x2d\xb5\x11\x9e\x23\x8a\xa0\x26\xd8\x1f\xa5\x93\x6d\xc5\xdc\xa9\x9b\x05\xb5\xb3\x55\xd5\xbc\x53\x3e\x43\xe8\x6b\x7a\x45\xe5\xd5\x15\xc8\xed\x69\x9b\x3c\xf0\x73\xed\x22\xe2\x79\x4b\xc7\x12\xff\x2e\xfb\x21\x30\x26\xbe\x80\x5e\xc6\x9b\x36\x2d\x2b\x5a\xc6\x5f\x15\xa9\x94\xd2\x3e\xd2\xd6\x30\x9a\xc2\x68\xa0\x7d\x5e\x94\xb7\x4f\x54\xc5\x9f\x72\xd6\x80\xc6\xab\x77\xc6\x49\x50\x24\xa2\xda\x39\xf5\x43\x06\x8b\xc3\xbe\x71\xb8\xc4\x12\xee\x25\x91\x10\x1c\x58\x71\xae\x33\xce\x99\x75\xa8\xd8\xf8\xcf\xdc\xf7\x5a\x1c\x14\x0e\xc2\x72\x9f\xba\xc0\xdc\xae\x86\x8c\x95\xf6\xfa\xf8\x89\xeb\x82\xe8\xea\x2b\x37\x51\x6e\x88\x7e\xc7\xb2\x51\x4c\xc8\xaa\x70\x2d\x21\x73\xd3\x3f\xf5\x2b\xcb\x66\x80\x18\x97\x96\x44\xc4\x57\x12\x74\xd6\x85\x12\x08\xd5\x9f\x03\x8d\x02\xd9\x91\xf1\xac\x9f\xb4\xd8\xeb\xb3\xb9\x91\x2e\xc6\x64\xc6\x12\x1a\xe8\xac\x6f\x35\xf9\x5d\xd9\x96\x0e\x81\xb6\x8c\x47\xea\x13\xe3\xf2\xe5\x3c\x9e\xdf\x1a\x1a\x93\x93\x4a\x69\x7f\x9b\x9c\xea\xee\x32\xd1\x53\x14\xb7\xc5\xbd\xbc\xd5\xe6\xd7\x73\xac\x3c\xdb\x19\xb6\xc0\x3d\xe9\x55\x61\x6a\xe6\x49\xaf\x0b\x53\x33\x35\xa7\x00\xc7\x66\xa9\xd9\x3c\x96\xba\xe0\xb8\xcf\x1f\x52\x3b\x8e\x6a\x85\x98\x71\xff\x11\x2e\x40\x53\xf4\x87\x7a\x22\xb8\xad\xe7\x1c\xc1\xee\xd6\x78\xbe\x29\x0c\x15\xd5\x2d\x7f\x6b\x25\xd4\xd5\x89\xfa\xa3\xd3\x86\xb5\xfb\x1c\xc5\x67\x64\xed\x31\xc2\x04\x44\x02\x52\xdd\x6e\x35\xa7\xa8\x34\xaa\x50\x13\x3f\x75\xd7\x65\xe7\xc6\xe4\xe7\x70\x16\xd1\xd5\xe7\x2c\x2c\xcb\x6f\x63\xb6\x62\x29\x8d\xf2\x94\xa8\x68\x8b\xa1\xcb\x4b\x63\x86\x12\x84\xaf\xc7\x8d\x97\x3f\x74\x37\x66\x45\xbd\xdf\xd8\xca\x59\xd2\x00\x84\x24\x41\x58\x4e\x89\xd2\xdd\xc4\x9e\xd9\x3c\x71\x52\x2f\x94\xc1\xab\xc1\x4e\x4f\xfd\x2d\x7a\xff\x02\x00\x00\xff\xff\xf3\xd1\x50\xbd\x06\x25\x00\x00")

func schemasResearch_objectJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasResearch_objectJson,
		"schemas/research_object.json",
	)
}

func schemasResearch_objectJson() (*asset, error) {
	bytes, err := schemasResearch_objectJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/research_object.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasTypesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\xcb\x4e\xf3\x30\x10\x85\xf7\x7d\x0a\xcb\x7f\x17\xe9\xc5\x71\xf3\x53\x50\x9b\x0d\x62\x81\xc4\x02\xa9\x0b\x24\x16\x24\x41\x32\x8d\xd3\xba\xc8\x4e\x64\x4f\xa9\x4a\xf1\xbb\x23\xe7\x46\xc3\x82\x82\x60\x11\x69\xf4\x9d\xcc\x99\x39\x93\x1c\x7a\x08\x61\x91\xe2\x10\xe1\x35\x40\x61\x42\x4a\x77\xbb\x9d\xbf\x11\x66\xe9\xb3\xa5\xbf\x7d\xa6\x3a\x35\x86\x9a\xe5\x9a\x4b\x46\x61\x5f\x70\xe3\x6f\x4c\xae\xe8\x3f\x3c\x76\xad\xfd\x4a\x69\xfa\x43\x4a\x9d\x4a\x2a\xea\xe7\x7a\x45\x53\xcd\x32\x20\x93\x69\xed\x51\xf7\xa5\x3c\x13\x4a\x80\xc8\x95\xc1\x21\x72\x5b\x20\x84\x55\xae\xae\x65\x01\xfb\x3b\xd0\x42\xad\x5a\x8e\x10\x76\x83\xdd\x0c\x53\x29\xe3\x86\x4b\xa1\x6e\xb9\x5a\xc1\x1a\x87\x28\x28\xa1\xad\x34\xbc\xdd\x96\xa9\x4e\x3a\x14\x0c\x80\x6b\xe5\xa4\xc7\x68\x42\xe6\x8c\x64\xc9\x61\x66\x49\x5b\x4f\x2d\x89\x02\x72\x9e\xb4\xe0\xcc\x92\x68\x36\x67\x4f\x5d\xd2\xd4\xc1\x7f\xdb\xc7\x9d\x4d\x0c\x97\xf7\x5c\xff\x74\x17\x6f\xf2\x16\x05\x64\x5e\x0e\x49\x86\x83\x38\xf6\x4f\x12\x8f\x78\xae\xba\x22\x0f\x8c\xbc\x92\x64\x14\xc7\xfe\x60\xd8\x21\x83\x4b\x2f\x8e\x47\xa7\xdf\xfa\x94\x40\x14\x0b\x7d\x93\x1b\x50\x4c\xf2\xe3\x1c\xb9\xe2\x8b\x0c\x87\x28\xaa\x01\x6a\xa5\xaf\x62\x96\x5a\x96\x6b\xc9\xa0\xfc\x6d\x1a\xe3\x56\xb6\xe3\xdf\xf8\x89\xe2\x65\xfa\x87\x5e\x17\x47\x5e\x75\x95\x74\x8e\x03\x42\x72\x03\x4c\x16\xdf\xf9\xc2\x1f\xd6\x29\x03\x4e\x5c\x6f\x7d\xea\x9e\x7b\x6c\xef\x3d\x00\x00\xff\xff\x85\xa5\xb8\x31\x90\x03\x00\x00")

func schemasTypesJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasTypesJson,
		"schemas/types.json",
	)
}

func schemasTypesJson() (*asset, error) {
	bytes, err := schemasTypesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/types.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataCreateReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x41\x8b\xfa\x30\x10\xc5\xef\xf9\x14\x03\xc2\x1f\x3d\xb4\xf9\x7b\x75\x4f\xa2\x5e\x04\x15\xac\x37\x91\xed\x34\x9d\xb6\x91\x36\xc9\x66\xa6\xb0\x7e\xfb\xa5\x76\x5d\x44\xf6\xba\x97\xc0\x64\xde\x7b\xbc\xdf\x4c\x60\x47\x82\x25\x0a\xc2\x2a\x12\x0a\x29\xb5\x23\x66\xac\x09\x4e\xb7\x40\x0b\xc8\x1f\xfb\x71\x9d\xa7\x4a\xad\x89\x4d\xb4\x05\x31\x20\x6c\xb3\xc3\x1e\x02\xde\x5a\x8f\x25\xf8\x0a\xba\x47\x9a\xaf\x00\x1d\x9c\x0f\xc5\x95\x8c\x5c\xa6\x8d\x48\xe0\x85\xd6\xb5\x95\xa6\x2f\x52\xe3\x3b\xbd\xb5\x6c\x8e\xeb\x2c\xd3\xb1\x64\x4e\x0c\x3a\xef\xac\xc1\x36\x19\xec\x49\xe7\x4b\x6a\xb5\x44\x22\x3d\x4f\xe7\xe9\x7f\x1d\xa2\x0f\x14\xc5\x12\xeb\x31\x73\x06\xd2\xa0\x80\x65\xa8\xc9\x51\x44\xa1\x12\xca\x3e\x5a\x57\x03\x42\xbe\x3a\x6e\x96\xa7\x4d\x0e\x83\x09\xc5\x7a\x97\x2a\x35\x99\x40\x66\xc8\x61\xb4\x9e\x95\x4a\x20\x23\x27\x20\x1e\xb8\x2f\x46\xa0\xc8\xc3\xe8\xbc\xd8\xea\x36\xa6\xff\xe0\x54\x3e\xfe\x39\x4f\x83\x0c\x05\x91\x03\x73\x3f\x75\x39\x56\x3e\xd2\x47\x4f\x2c\x43\xe1\xcd\x27\x76\xa1\xa5\xc5\x3f\x57\x70\x78\x7b\x7e\xcf\x79\x1c\x65\xe9\x95\xbd\xcb\x2f\xd3\xe7\x71\x36\xb0\x9a\x86\x3a\xfc\xc5\xf9\xe2\x7f\xe7\xbb\xf0\x25\xe6\xf9\x77\xf6\xdd\x8a\x83\x77\x4c\x4a\xed\xf5\x32\x55\x5f\x01\x00\x00\xff\xff\x11\x1b\x89\xbb\x47\x02\x00\x00")

func messagesBodyMetadataCreateReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataCreateReadmeMd,
		"messages/body/metadata/create/README.md",
	)
}

func messagesBodyMetadataCreateReadmeMd() (*asset, error) {
	bytes, err := messagesBodyMetadataCreateReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/create/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataCreateRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\xcb\x6e\xe3\x36\x14\xdd\xe7\x2b\x0c\xad\xc3\x09\x25\xeb\xe9\x55\x03\x67\xa6\x33\x6d\x32\x0d\x12\xa7\x9b\x22\x0b\x8a\xbc\xb2\xd9\xca\xa2\x41\xd2\x19\xa4\x81\xff\xbd\xa0\x6c\x39\x7a\x90\xb6\xb2\xe9\x04\x41\xa0\xf0\x1e\x92\xf7\x79\x0e\xdf\x2e\x26\x13\x4f\xe4\x7f\x03\xd5\x4f\x5b\xce\xbc\xd9\xc4\x8b\xe2\x14\x43\x0a\x18\x05\x29\x89\x50\x98\x07\x18\x65\x61\x0a\xa8\x60\x98\xe1\x34\x49\x7d\xc0\xb9\x77\xf9\xbe\x6f\xc1\x75\x09\x66\xa3\xd2\x92\x57\xcb\xb6\xe9\x1e\xa4\x12\xd5\x83\xa8\xed\x7f\x5d\x4c\x26\x93\xc9\x5b\xfd\x77\x32\xf1\x36\xb5\xcd\x9b\x1d\x57\x8e\x6b\x8d\x23\x41\x92\xfa\x3e\x09\x29\xca\x68\x1e\xa1\x10\x62\x86\x08\x8e\x33\x14\x51\x3f\x0b\xd2\xb4\x20\x10\xa5\xf5\x6d\x9d\xdd\xdf\x18\x54\x9a\x17\x1c\xe4\xf1\xce\xfd\xcf\x5b\xeb\xdb\x82\xfe\x93\x94\xdb\x7e\x18\x27\xe0\x8b\xd7\x8d\x41\xfb\x2d\xd4\xee\xf8\xfd\x3c\xf0\xea\x73\xa5\x4d\x9a\xd6\x50\xe9\x9e\x5b\xfe\x89\x5d\xd7\x45\xc1\x4b\x4e\x34\xaf\x13\x35\x76\xd7\xaf\xfc\x05\xaa\xef\x64\x6d\x8f\xe6\x00\x9a\x57\xa7\xac\x8f\x27\xad\x0b\x28\x61\xb3\x12\x15\x7c\xdf\xae\xf3\x3a\xcf\x4e\xe8\x1d\xe1\xa5\xb1\xef\xff\xfb\xa5\x02\x3d\xc4\xfc\x21\x97\xa4\xe2\xaa\x0e\xf3\xa9\xe2\xba\xd3\x13\xa6\x97\x7a\xf6\x63\x7f\xa4\x39\x24\x85\x1f\x23\x0c\x09\x46\x61\xec\x17\x88\x04\x2c\x47\x2c\x63\x09\x8d\x43\x92\x16\x7e\xd2\x29\xe3\xe0\x24\x67\x92\x7a\xd8\x9e\x47\x3d\xeb\x6f\x5c\xd1\x6f\xc6\x23\xff\xd2\x0d\x3a\x71\x55\x0f\xd9\x74\xd6\x09\xc8\x35\x63\x12\x94\x6a\x9d\x67\x6d\xc3\xe6\x6b\xd7\x1c\xe5\xc9\xfd\x28\xee\xbb\xc7\x98\x9f\x5b\xd3\x7a\x03\x8a\x4a\xbe\x39\x04\x6c\x19\xe7\x07\xbe\x5c\x69\x35\x1c\x65\x59\xaf\x3f\x6a\xa2\x87\x0d\xde\x73\xf0\xf9\xb2\xbb\xe9\xab\x28\x59\x6f\x52\x9d\x3b\x4a\x4e\xa1\xa2\xd0\x01\x77\x1a\xe5\x00\x38\x55\xd5\x03\xa4\x43\x12\x83\x1c\xee\x06\x57\x13\x4a\xf7\xf9\x76\xdc\xbc\xb7\xdb\x2a\x77\x30\xb5\x93\xe3\xbe\xcf\x5e\x16\xa2\x2d\xf4\xc9\x88\x86\x23\x65\x05\x18\x07\xc8\xc7\x08\x07\x0b\x1f\xcf\xb0\xf9\x45\x38\x9a\x61\x7c\x0c\xbe\xc6\x77\x38\xab\x7f\xcd\xef\xf0\xfa\x43\x48\xf6\x1e\x64\xcb\xcd\x36\x6e\x4e\x34\x2c\x85\x7c\x3d\x87\x7b\x00\x25\xb6\x92\x42\x3b\x29\x07\x53\xe3\x77\x7b\xcd\x42\xdb\xc7\x58\xf9\x59\x92\x6e\x41\xfa\x45\xf0\x24\x94\x9d\xb9\xb2\x46\xff\x60\x40\xc0\x7e\xb2\x17\x6d\x26\xb4\xab\xa6\x93\x95\xce\x32\xd2\x38\x36\x3a\xc3\x44\xe3\x58\x68\x24\xdf\xdc\x4b\x50\x20\x5f\xea\xb3\x3e\xbf\xb4\x89\xe3\xfd\x91\xd0\x87\x38\x53\x3f\x40\x0e\x2a\x30\x40\xdc\x80\x3e\xa8\x53\xdb\xfd\xbe\x97\x5f\xb8\xad\x0e\x05\x2f\xa1\xd1\x21\xf0\x23\x4c\x43\x92\x23\x3c\x35\x3a\x04\x11\x41\x69\x12\x04\x28\x29\xf2\xe9\x34\xce\xf2\x04\xb7\x74\xa8\xde\x69\xa5\x9f\x0e\xc2\x51\xa0\xda\xf6\xc8\xff\xed\x46\x66\x16\x6f\x49\x0e\xa5\x6b\x87\xa1\x90\xb9\x04\xd3\xe1\xdd\xa6\xf9\x20\x8b\xd8\x78\xa4\x5d\x6e\x73\xd7\x51\x24\x5a\xd7\x9c\x12\x88\x01\xe1\x77\x9f\x34\x4e\x99\x38\xb3\xcf\x26\x16\x83\x37\xe0\x79\xc1\x18\x2b\x19\xae\xd7\x9f\x45\x38\x06\x5e\xb8\xc5\x63\x9c\x7c\x74\xee\xb6\xd6\x64\xbe\x02\xfa\x8f\xda\xae\xdd\x02\x46\x0f\x88\xa6\xa7\x59\x11\x4c\xf3\x30\xce\x51\x9c\xc7\x21\x0a\x49\x88\x51\x1a\x06\x05\x8a\x08\x9b\xc6\xd3\x3c\x8f\xc1\xf7\xbb\xca\xda\x9c\x60\x15\xc1\xc6\xd8\x1f\xdf\x13\x92\x6b\xfc\xfe\x22\xe4\x9a\x34\x93\x6c\xed\xec\xb9\x58\x6f\x84\xe2\x66\xa6\x6f\xe1\xc5\x3d\x01\x5f\x89\xba\xe3\xeb\xa6\x73\xb5\xdc\xc2\x60\x40\xee\x04\x33\xe5\x65\xee\x24\x7d\x78\x5a\xec\xf3\xe2\x8a\xf6\x7e\x9f\xfb\x11\x2f\xa1\x9a\x7d\xd4\x90\x04\xdc\x8c\x3a\x88\x65\x34\xb3\xda\xd1\xd6\x2a\x8f\x64\x58\x77\x06\x9e\x36\xa5\x20\xcc\x34\xfb\x56\x0d\x82\x7b\xd4\x42\x92\x25\x38\xac\xb7\x44\xe9\x1b\xf1\xa3\x32\x07\xfc\x0f\x2c\xb7\x00\xba\xaa\x38\x25\xe5\xb5\xd6\x92\xe7\x5b\x0d\x6a\x7c\xe9\x0e\x91\xdc\x0a\xda\xe8\xb8\xb7\xd2\x7a\xa3\x66\x57\x57\x5a\x88\x52\x7d\xe2\xa0\x8b\x4f\x42\x2e\xaf\x56\x7a\x5d\x5e\xc9\x82\x4e\xb3\x34\xf6\x6c\x67\xdc\x97\x44\x17\x42\xae\xbb\x01\xab\xae\xb1\x19\xea\x22\xc8\xa6\x59\x84\x7d\x14\xe4\x01\x33\x42\x45\x51\xe6\x67\x09\xc2\x8c\x90\x28\xa1\x34\x8f\x83\xf6\x50\xf7\x8f\x71\x3f\x1a\x7a\x40\xcb\xbb\xa1\x87\x98\x0b\x65\xa1\xb2\xdd\xbb\x00\x5f\xec\x2e\xfe\x0b\x00\x00\xff\xff\x1f\x46\x3f\x3c\x9b\x10\x00\x00")

func messagesBodyMetadataCreateRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataCreateRequestJson,
		"messages/body/metadata/create/request.json",
	)
}

func messagesBodyMetadataCreateRequestJson() (*asset, error) {
	bytes, err := messagesBodyMetadataCreateRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/create/request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataCreateRequest_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xb1\xce\x83\x30\x0c\x04\xe0\x9d\xa7\x40\xf9\xff\xb1\xe4\x3a\x74\xe2\x65\x90\x49\x0c\x84\x0a\xd2\xda\x46\xa8\xaa\xfa\xee\x15\x02\xf6\xae\xbe\xb3\xbe\x7b\x17\x65\xe9\x52\x74\x75\xe9\x06\xb3\x87\xd6\xc0\xba\xae\x7e\x4c\x1a\x3c\x05\xbf\xdc\x21\x51\x15\x1a\x06\x9e\x08\x13\xab\x52\xcf\x8a\x36\xc7\x17\x26\x36\x8a\x64\x84\x20\x4c\xc6\x10\x7e\x2e\xac\xd6\xec\x65\x3f\x6a\x9e\xf1\xe7\x2e\x9b\xf0\xbf\xdf\x4e\xa6\x06\xb6\xb4\x3a\x9a\x59\x7a\x44\xa1\xce\xaa\xeb\xed\xa0\xce\x3f\xe1\xee\xc7\x6d\xc2\xca\x24\x61\x68\x72\x3b\x72\xb0\x83\x47\xe4\x2e\xcd\xc9\x52\x9e\x15\x7b\xe2\x8a\x4f\xf1\x0d\x00\x00\xff\xff\x7a\x9a\xdd\x2b\xf7\x00\x00\x00")

func messagesBodyMetadataCreateRequest_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataCreateRequest_schemaJson,
		"messages/body/metadata/create/request_schema.json",
	)
}

func messagesBodyMetadataCreateRequest_schemaJson() (*asset, error) {
	bytes, err := messagesBodyMetadataCreateRequest_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/create/request_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataDeleteReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\xc1\xca\xdb\x30\x10\x84\xef\x7a\x8a\x85\x40\xf9\x73\xb0\xd5\x5c\xd3\x53\xc1\xbe\x84\x26\x81\x38\xb7\x10\xea\xb5\xb4\xb6\x15\x6c\x49\xd5\xae\xa1\x79\xfb\xe2\xb8\x29\x21\xf4\xfa\x5f\x04\xab\x9d\x19\xe6\xdb\x15\xec\x49\xd0\xa2\x20\x14\x34\x90\x90\x52\x7b\x62\xc6\x8e\xe0\x7c\x8f\xb4\x85\xfa\xb9\x5f\xd6\x75\xae\x54\x41\x6c\x92\x6b\x88\x01\x61\x57\x1d\x0f\x10\xf1\x3e\x04\xb4\x10\x5a\x18\x9f\x69\xa1\x05\xf4\x70\x39\x36\x37\x32\x72\xfd\xe8\x45\x22\x6f\xb5\xee\x9c\xf4\x53\x93\x9b\x30\xea\x9d\x63\x73\x2a\xaa\x4a\x27\xcb\x9c\x19\xf4\xc1\x3b\x83\x43\x36\xdb\xb3\x31\x58\x1a\xb4\x24\x22\xbd\xc9\x37\xf9\x57\x1d\x53\x88\x94\xc4\x11\xeb\x25\x73\x0d\xd2\xa3\x80\x63\xe8\xc8\x53\x42\x21\x0b\x76\x4a\xce\x77\x80\x50\x17\xe5\x8f\xf2\x5c\xd6\x30\x9b\x50\x5c\xf0\xb9\x52\xab\x15\x54\x86\x3c\x26\x17\x58\xa9\x0c\x2a\xf2\x02\x12\x80\xa7\x66\x01\x4a\x3c\x8f\x3e\x88\x6b\xef\x4b\xfa\x3f\x9c\x36\xa4\x4f\xe7\xe9\x91\xa1\x21\xf2\x60\x1f\xa7\xb6\x4b\xe5\x13\xfd\x9a\x88\x65\x2e\x5c\xfe\xc6\x31\x0e\xb4\xfd\xe2\x1b\x8e\xdf\x5e\xdf\x4b\x9d\x16\x59\x7e\xe3\xe0\xeb\xeb\xc7\xeb\xb8\x9e\x59\x4d\x4f\x23\xfe\xc7\xf9\xe6\xff\xc9\x0f\xe1\x5b\xcc\xeb\xef\xfa\x6f\x2b\x8e\xc1\x33\x29\x75\xd0\xdf\x73\xf5\x27\x00\x00\xff\xff\x57\x41\x68\xae\x47\x02\x00\x00")

func messagesBodyMetadataDeleteReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataDeleteReadmeMd,
		"messages/body/metadata/delete/README.md",
	)
}

func messagesBodyMetadataDeleteReadmeMd() (*asset, error) {
	bytes, err := messagesBodyMetadataDeleteReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/delete/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataDeleteRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\xca\x4f\xca\x4a\x4d\x2e\x09\x2d\xcd\x4c\x51\xb2\x52\x50\x4a\x4d\x36\x36\x33\x4b\x33\x32\xd7\x4d\x4b\x31\x31\xd6\x35\x31\x49\x4a\xd3\x4d\x32\x35\xb6\xd4\x35\x36\x36\xb0\x34\x37\x37\x4d\x31\x35\x37\x48\x52\xe2\xaa\xe5\x02\x04\x00\x00\xff\xff\x61\xdb\x1b\xa4\x3b\x00\x00\x00")

func messagesBodyMetadataDeleteRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataDeleteRequestJson,
		"messages/body/metadata/delete/request.json",
	)
}

func messagesBodyMetadataDeleteRequestJson() (*asset, error) {
	bytes, err := messagesBodyMetadataDeleteRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/delete/request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataDeleteRequest_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xb1\x4e\xc4\x40\x0c\x44\xfb\xfd\x8a\xd5\x42\xc9\xc5\x14\x54\xf9\x0a\x1a\x2a\x84\x90\x2f\x76\xee\x36\x24\xd9\xb0\x76\x14\x9d\x50\xfe\x1d\x79\x93\x48\x48\x34\xd7\x8e\xc7\xf3\x66\x7e\x9c\xf7\x21\x52\xa8\x7d\xb8\xaa\x4e\x52\x03\x2c\xcb\x52\x75\x51\x9a\x0a\x9b\x6a\xfe\x82\x4c\x22\x20\xcd\x95\x07\x84\x81\x45\xf0\xc2\x02\xe7\x44\x37\x18\x58\x91\x50\x11\x88\x7b\x56\x86\xcc\xdf\x33\x8b\x7e\x6e\xe6\xaa\x93\x34\xc2\x43\x78\x32\xc2\xe3\xa6\x1d\x98\x1a\xc0\xae\xa7\xdd\x99\xf2\x05\x28\x63\xab\xa7\xe7\x97\x1d\xb5\xff\xe9\x6d\x62\x7b\x4a\xe7\x8e\x1b\xdd\xb4\x29\xa7\x89\xb3\x46\x96\x50\x7b\xeb\xef\x8f\xfb\xdb\x5c\x96\x6c\x9a\x51\x33\xb7\x77\x2e\x33\x90\xec\x95\x81\xb8\x8d\x63\xd4\x98\x46\x81\xd9\x32\x4b\xe0\xea\xbc\x5f\x4b\x03\x1b\x1a\x33\x1b\xeb\xfd\x1f\xdf\x79\xff\x51\x5c\x48\x54\x32\xb0\x7f\xfd\xdb\xb8\xc5\x5e\xd8\xad\xee\x37\x00\x00\xff\xff\xb7\x1d\xfc\xdc\x7a\x01\x00\x00")

func messagesBodyMetadataDeleteRequest_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataDeleteRequest_schemaJson,
		"messages/body/metadata/delete/request_schema.json",
	)
}

func messagesBodyMetadataDeleteRequest_schemaJson() (*asset, error) {
	bytes, err := messagesBodyMetadataDeleteRequest_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/delete/request_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataReadReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x8f\x41\x8b\xdb\x30\x10\x85\xef\xfa\x15\x03\x81\xb2\x3e\xd8\xea\x5e\xd3\x53\x21\x7b\x59\x48\x03\x76\x6f\x21\xd4\x63\x69\x62\x2b\xd8\x92\xa2\x19\xd3\xe4\xdf\x17\xd7\x0d\x31\x49\xa1\xbd\xec\x65\x60\x66\xde\x7b\x7c\x6f\x05\x5b\x12\xb4\x28\x08\x25\xa1\x55\x6a\x4b\xcc\xd8\x12\x7c\xbf\x46\x5a\x43\x7d\xfb\x4e\xcf\xba\x50\x6a\x43\x6c\x92\x6b\x88\x01\xe1\xbd\xda\x7d\x83\x88\xd7\x3e\xa0\x85\x70\x84\xe1\x96\x14\x8e\x80\x1e\xf6\xbb\xe6\x44\x46\x0e\x2f\x9d\x48\xe4\xb5\xd6\xad\x93\x6e\x6c\x0a\x13\x06\xfd\xee\xd8\x94\x9b\xaa\xd2\xc9\x32\xe7\x06\x7d\xf0\xce\x60\x9f\x4f\xf6\x7c\x08\x96\x7a\x2d\x89\x48\xbf\x16\xaf\xc5\x67\x1d\x53\x88\x94\xc4\x11\xeb\x39\x33\x03\xe9\x50\xc0\x31\xb4\xe4\x29\xa1\x90\x05\x3b\x26\xe7\x5b\x40\xa8\xcb\xb7\xaf\x9b\x1a\x26\x0b\x8a\x0b\xbe\x50\x6a\xb5\x82\xca\x90\xc7\xe4\x02\x2b\x95\x43\x45\x5e\xa0\xb9\x02\x8f\xcd\x5c\x27\x31\xfc\xec\xc8\x83\x74\x74\xaf\x71\x0c\x69\xea\x41\x17\xc7\x32\x45\x7f\x68\x21\xc7\x90\xe8\x3c\xba\x44\x76\x06\x2e\xe9\x3c\x12\xcb\x84\xfb\x76\xc1\x21\xf6\xb4\xfe\xe4\x1b\x8e\x5f\x96\x73\x5f\xa7\x59\x56\x9c\x38\xf8\xfa\xf0\xb2\x5c\xb3\xa9\xa9\xe9\x68\xc0\xbf\x38\x1f\xfc\x3f\xf8\xb7\xf0\x21\x66\x79\xcd\xfe\x50\x71\x0c\x9e\xe9\xdf\x58\xb3\xee\x1e\xb8\xd8\xff\x13\x6c\x76\x3c\x91\x3d\x9f\x33\xf5\x2b\x00\x00\xff\xff\xcf\xf2\xcb\xbc\xc7\x02\x00\x00")

func messagesBodyMetadataReadReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataReadReadmeMd,
		"messages/body/metadata/read/README.md",
	)
}

func messagesBodyMetadataReadReadmeMd() (*asset, error) {
	bytes, err := messagesBodyMetadataReadReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/read/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataReadRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\xca\x4f\xca\x4a\x4d\x2e\x09\x2d\xcd\x4c\x51\xb2\x52\x50\x4a\x4d\x36\x36\x33\x4b\x33\x32\xd7\x4d\x4b\x31\x31\xd6\x35\x31\x49\x4a\xd3\x4d\x32\x35\xb6\xd4\x35\x36\x36\xb0\x34\x37\x37\x4d\x31\x35\x37\x48\x52\xe2\xaa\xe5\x02\x04\x00\x00\xff\xff\x61\xdb\x1b\xa4\x3b\x00\x00\x00")

func messagesBodyMetadataReadRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataReadRequestJson,
		"messages/body/metadata/read/request.json",
	)
}

func messagesBodyMetadataReadRequestJson() (*asset, error) {
	bytes, err := messagesBodyMetadataReadRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/read/request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataReadRequest_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xb1\x4e\xc4\x40\x0c\x44\xfb\x7c\xc5\x6a\xa1\xe4\x62\x0a\xaa\x7c\x05\x0d\x15\x42\xc8\x17\x3b\x77\x1b\x2e\xd9\x60\x3b\x8a\x4e\x28\xff\x8e\xbc\xc9\x49\x48\x34\xd7\x8e\xc7\xf3\x66\x7e\xaa\x10\x62\xa2\xd8\x84\x78\x36\x9b\xb4\x01\x58\x96\xa5\xee\x93\xb6\x35\xb6\xf5\xfc\x05\x42\xaa\xa0\xed\x99\x07\x84\x81\x55\xf1\xc4\x0a\xc7\x4c\x57\x18\xd8\x90\xd0\x10\x84\x91\x40\xf8\x7b\x66\xb5\xcf\xcd\x5a\xf7\x9a\x47\x78\x88\x4f\x9e\xff\xb8\x69\x37\x48\x03\xe0\xd7\xc3\xee\xcc\x72\x02\x12\xec\xec\xf0\xfc\xb2\x83\xf6\x3f\xbb\x4e\xec\x4f\xf9\xd8\x73\x6b\x9b\x36\x49\x9e\x58\x2c\xb1\xc6\x26\x78\xfb\x70\xbb\xbf\xcd\x65\xc7\xa6\x39\x55\xb8\xbb\x73\x97\x83\x74\xaf\x0c\xc4\x5d\x1a\x93\xa5\x3c\x2a\xcc\x9e\x59\x02\xd7\x2a\x84\xb5\x34\xf0\xa1\x49\xd8\x59\xef\xff\xf8\x55\x08\x1f\xc5\x85\x44\x25\x03\x2f\xaf\x7f\x1b\x77\x78\x51\xae\xd6\xea\x37\x00\x00\xff\xff\x55\x25\x49\xec\x78\x01\x00\x00")

func messagesBodyMetadataReadRequest_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataReadRequest_schemaJson,
		"messages/body/metadata/read/request_schema.json",
	)
}

func messagesBodyMetadataReadRequest_schemaJson() (*asset, error) {
	bytes, err := messagesBodyMetadataReadRequest_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/read/request_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataReadResponseJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\xcb\x6e\xe3\x36\x14\xdd\xe7\x2b\x0c\xad\xc3\x09\x25\xeb\xe9\x55\x03\x67\xa6\x33\x6d\x32\x0d\x12\xa7\x9b\x22\x0b\x8a\xbc\xb2\xd9\xca\xa2\x41\xd2\x19\xa4\x81\xff\xbd\xa0\x6c\x39\x7a\x90\xb6\xb2\xe9\x04\x41\xa0\xf0\x1e\x92\xf7\x79\x0e\xdf\x2e\x26\x13\x4f\xe4\x7f\x03\xd5\x4f\x5b\xce\xbc\xd9\xc4\x8b\xe2\x14\x43\x0a\x18\x05\x29\x89\x50\x98\x07\x18\x65\x61\x0a\xa8\x60\x98\xe1\x34\x49\x7d\xc0\xb9\x77\xf9\xbe\x6f\xc1\x75\x09\x66\xa3\xd2\x92\x57\xcb\xb6\xe9\x1e\xa4\x12\xd5\x83\xa8\xed\x7f\x5d\x4c\x26\x93\xc9\x5b\xfd\x77\x32\xf1\x36\xb5\xcd\x9b\x1d\x57\x8e\x6b\x8d\x23\x41\x92\xfa\x3e\x09\x29\xca\x68\x1e\xa1\x10\x62\x86\x08\x8e\x33\x14\x51\x3f\x0b\xd2\xb4\x20\x10\xa5\xf5\x6d\x9d\xdd\xdf\x18\x54\x9a\x17\x1c\xe4\xf1\xce\xfd\xcf\x5b\xeb\xdb\x82\xfe\x93\x94\xdb\x7e\x18\x27\xe0\x8b\xd7\x8d\x41\xfb\x2d\xd4\xee\xf8\xfd\x3c\xf0\xea\x73\xa5\x4d\x9a\xd6\x50\xe9\x9e\x5b\xfe\x89\x5d\xd7\x45\xc1\x4b\x4e\x34\xaf\x13\x35\x76\xd7\xaf\xfc\x05\xaa\xef\x64\x6d\x8f\xe6\x00\x9a\x57\xa7\xac\x8f\x27\xad\x0b\x28\x61\xb3\x12\x15\x7c\xdf\xae\xf3\x3a\xcf\x4e\xe8\x1d\xe1\xa5\xb1\xef\xff\xfb\xa5\x02\x3d\xc4\xfc\x21\x97\xa4\xe2\xaa\x0e\xf3\xa9\xe2\xba\xd3\x13\xa6\x97\x7a\xf6\x63\x7f\xa4\x39\x24\x85\x1f\x23\x0c\x09\x46\x61\xec\x17\x88\x04\x2c\x47\x2c\x63\x09\x8d\x43\x92\x16\x7e\xd2\x29\xe3\xe0\x24\x67\x92\x7a\xd8\x9e\x47\x3d\xeb\x6f\x5c\xd1\x6f\xc6\x23\xff\xd2\x0d\x3a\x71\x55\x0f\xd9\x74\xd6\x09\xc8\x35\x63\x12\x94\x6a\x9d\x67\x6d\xc3\xe6\x6b\xd7\x1c\xe5\xc9\xfd\x28\xee\xbb\xc7\x98\x9f\x5b\xd3\x7a\x03\x8a\x4a\xbe\x39\x04\x6c\x19\xe7\x07\xbe\x5c\x69\x35\x1c\x65\x59\xaf\x3f\x6a\xa2\x87\x0d\xde\x73\xf0\xf9\xb2\xbb\xe9\xab\x28\x59\x6f\x52\x9d\x3b\x4a\x4e\xa1\xa2\xd0\x01\x77\x1a\xe5\x00\x38\x55\xd5\x03\xa4\x43\x12\x83\x1c\xee\x06\x57\x13\x4a\xf7\xf9\x76\xdc\xbc\xb7\xdb\x2a\x77\x30\xb5\x93\xe3\xbe\xcf\x5e\x16\xa2\x2d\xf4\xc9\x88\x86\x23\x65\x05\x18\x07\xc8\xc7\x08\x07\x0b\x1f\xcf\xb0\xf9\x45\x38\x9a\x61\x7c\x0c\xbe\xc6\x77\x38\xab\x7f\xcd\xef\xf0\xfa\x43\x48\xf6\x1e\x64\xcb\xcd\x36\x6e\x4e\x34\x2c\x85\x7c\x3d\x87\x7b\x00\x25\xb6\x92\x42\x3b\x29\x07\x53\xe3\x77\x7b\xcd\x42\xdb\xc7\x58\xf9\x59\x92\x6e\x41\xfa\x45\xf0\x24\x94\x9d\xb9\xb2\x46\xff\x60\x40\xc0\x7e\xb2\x17\x6d\x26\xb4\xab\xa6\x93\x95\xce\x32\xd2\x38\x36\x3a\xc3\x44\xe3\x58\x68\x24\xdf\xdc\x4b\x50\x20\x5f\xea\xb3\x3e\xbf\xb4\x89\xe3\xfd\x91\xd0\x87\x38\x53\x3f\x40\x0e\x2a\x30\x40\xdc\x80\x3e\xa8\x53\xdb\xfd\xbe\x97\x5f\xb8\xad\x0e\x05\x2f\xa1\xd1\x21\xf0\x23\x4c\x43\x92\x23\x3c\x35\x3a\x04\x11\x41\x69\x12\x04\x28\x29\xf2\xe9\x34\xce\xf2\x04\xb7\x74\xa8\xde\x69\xa5\x9f\x0e\xc2\x51\xa0\xda\xf6\xc8\xff\xed\x46\x66\x16\x6f\x49\x0e\xa5\x6b\x87\xa1\x90\xb9\x04\xd3\xe1\xdd\xa6\xf9\x20\x8b\xd8\x78\xa4\x5d\x6e\x73\xd7\x51\x24\x5a\xd7\x9c\x12\x88\x01\xe1\x77\x9f\x34\x4e\x99\x38\xb3\xcf\x26\x16\x83\x37\xe0\x79\xc1\x18\x2b\x19\xae\xd7\x9f\x45\x38\x06\x5e\xb8\xc5\x63\x9c\x7c\x74\xee\xb6\xd6\x64\xbe\x02\xfa\x8f\xda\xae\xdd\x02\x46\x0f\x88\xa6\xa7\x59\x11\x4c\xf3\x30\xce\x51\x9c\xc7\x21\x0a\x49\x88\x51\x1a\x06\x05\x8a\x08\x9b\xc6\xd3\x3c\x8f\xc1\xf7\xbb\xca\xda\x9c\x60\x15\xc1\xc6\xd8\x1f\xdf\x13\x92\x6b\xfc\xfe\x22\xe4\x9a\x34\x93\x6c\xed\xec\xb9\x58\x6f\x84\xe2\x66\xa6\x6f\xe1\xc5\x3d\x01\x5f\x89\xba\xe3\xeb\xa6\x73\xb5\xdc\xc2\x60\x40\xee\x04\x33\xe5\x65\xee\x24\x7d\x78\x5a\xec\xf3\xe2\x8a\xf6\x7e\x9f\xfb\x11\x2f\xa1\x9a\x7d\xd4\x90\x04\xdc\x8c\x3a\x88\x65\x34\xb3\xda\xd1\xd6\x2a\x8f\x64\x58\x77\x06\x9e\x36\xa5\x20\xcc\x34\xfb\x56\x0d\x82\x7b\xd4\x42\x92\x25\x38\xac\xb7\x44\xe9\x1b\xf1\xa3\x32\x07\xfc\x0f\x2c\xb7\x00\xba\xaa\x38\x25\xe5\xb5\xd6\x92\xe7\x5b\x0d\x6a\x7c\xe9\x0e\x91\xdc\x0a\xda\xe8\xb8\xb7\xd2\x7a\xa3\x66\x57\x57\x5a\x88\x52\x7d\xe2\xa0\x8b\x4f\x42\x2e\xaf\x56\x7a\x5d\x5e\xc9\x82\x4e\xb3\x34\xf6\x6c\x67\xdc\x97\x44\x17\x42\xae\xbb\x01\xab\xae\xb1\x19\xea\x22\xc8\xa6\x59\x84\x7d\x14\xe4\x01\x33\x42\x45\x51\xe6\x67\x09\xc2\x8c\x90\x28\xa1\x34\x8f\x83\xf6\x50\xf7\x8f\x71\x3f\x1a\x7a\x40\xcb\xbb\xa1\x87\x98\x0b\x65\xa1\xb2\xdd\xbb\x00\x5f\xec\x2e\xfe\x0b\x00\x00\xff\xff\x1f\x46\x3f\x3c\x9b\x10\x00\x00")

func messagesBodyMetadataReadResponseJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataReadResponseJson,
		"messages/body/metadata/read/response.json",
	)
}

func messagesBodyMetadataReadResponseJson() (*asset, error) {
	bytes, err := messagesBodyMetadataReadResponseJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/read/response.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataReadResponse_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xc1\x8e\x83\x30\x0c\x04\xd0\x3b\x5f\x81\xb2\x7b\x5c\x32\x7b\xe8\x89\x9f\x41\x26\x31\x10\x2a\x12\x64\xbb\x42\x55\xd5\x7f\xaf\x10\x70\xef\xd5\x33\xd6\x9b\x57\x55\xd7\x2e\x45\xd7\xd6\x6e\x32\x5b\xb5\x05\xb6\x6d\xf3\x73\xd2\xe0\x29\xf8\xc7\x1d\x12\x55\xa1\x61\xe2\x85\xb0\xb0\x2a\x8d\xac\xe8\x4b\x7c\x62\x61\xa3\x48\x46\x10\xa6\x08\x61\x5d\x4b\x56\xee\x8e\xae\x9f\xb5\x64\xfc\xb8\xbf\x1d\xf8\x3d\x6e\x97\xd2\x02\x7b\xda\x9c\xcd\x22\x23\xa2\xd0\x60\xcd\xff\xed\x94\xae\x3f\xe1\xe1\xcb\x69\xc2\xca\x24\x61\xea\x4a\x3f\x73\xb0\x93\x47\xe4\x21\xe5\x64\xa9\x64\xc5\x91\xb8\xea\x5d\x7d\x02\x00\x00\xff\xff\x8b\xe3\xab\x06\xf6\x00\x00\x00")

func messagesBodyMetadataReadResponse_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataReadResponse_schemaJson,
		"messages/body/metadata/read/response_schema.json",
	)
}

func messagesBodyMetadataReadResponse_schemaJson() (*asset, error) {
	bytes, err := messagesBodyMetadataReadResponse_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/read/response_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataUpdateReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x41\x0b\xda\x40\x10\x85\xef\xfb\x2b\x06\x84\xa2\x87\x64\xeb\xd5\x9e\x04\xbd\x08\x6a\x31\x7a\x12\x69\x26\xbb\x93\x64\x25\xd9\xdd\xee\x4c\xa0\xfe\xfb\x12\x53\x8b\x48\xaf\xbd\x2c\xcc\xce\x7b\x8f\xf7\xcd\x0c\xf6\x24\x68\x51\x10\x2e\xd1\xa2\x90\x52\x7b\x62\xc6\x86\xe0\xfc\x88\xb4\x82\xf2\xb5\x9f\xd6\x65\xae\xd4\x86\xd8\x24\x57\x11\x03\xc2\xae\x38\x1e\x20\xe2\xa3\x0b\x68\x21\xd4\xd0\xbf\xd2\x42\x0d\xe8\xe1\x7a\xac\xee\x64\xe4\x36\x6f\x45\x22\xaf\xb4\x6e\x9c\xb4\x43\x95\x9b\xd0\xeb\x9d\x63\x73\xda\x14\x85\x4e\x96\x39\x33\xe8\x83\x77\x06\xbb\x6c\xb4\x67\x7d\xb0\xd4\x69\x49\x44\x7a\x99\x2f\xf3\xaf\x3a\xa6\x10\x29\x89\x23\xd6\x53\xe6\x02\xa4\x45\x01\xc7\xd0\x90\xa7\x84\x42\x16\xec\x90\x9c\x6f\x00\xa1\xbc\x7c\xdf\xac\xcf\xdb\x12\x46\x13\x8a\x0b\x3e\x57\x6a\x36\x83\xc2\x90\xc7\xe4\x02\x2b\x95\x41\x41\x5e\x40\x02\xf0\x50\x4d\x40\x89\xc7\xd1\x07\x71\xf5\x63\x4a\xff\x8b\x53\x87\xf4\xdf\x79\x5a\x64\xa8\x88\x3c\x0c\xcf\x53\xdb\xa9\xf2\x89\x7e\x0e\xc4\x32\x16\xde\xfe\xc2\x3e\x76\xb4\xfa\xe2\x2b\x8e\xdf\xde\xdf\x6b\x99\x26\x59\x7e\xe7\xe0\xcb\xdb\xfc\x7d\x5c\x8c\xac\xa6\xa5\x1e\xff\xe1\xfc\xf0\xff\xe0\xa7\xf0\x23\xe6\xfd\x77\xf1\xa7\x15\xc7\xe0\x99\x94\x3a\xe8\x75\xae\x7e\x07\x00\x00\xff\xff\xfb\x23\x4c\x8b\x47\x02\x00\x00")

func messagesBodyMetadataUpdateReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataUpdateReadmeMd,
		"messages/body/metadata/update/README.md",
	)
}

func messagesBodyMetadataUpdateReadmeMd() (*asset, error) {
	bytes, err := messagesBodyMetadataUpdateReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/update/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataUpdateRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\xcb\x6e\xe3\x36\x14\xdd\xe7\x2b\x0c\xad\xc3\x09\x25\xeb\xe9\x55\x03\x67\xa6\x33\x6d\x32\x0d\x12\xa7\x9b\x22\x0b\x8a\xbc\xb2\xd9\xca\xa2\x41\xd2\x19\xa4\x81\xff\xbd\xa0\x6c\x39\x7a\x90\xb6\xb2\xe9\x04\x41\xa0\xf0\x1e\x92\xf7\x79\x0e\xdf\x2e\x26\x13\x4f\xe4\x7f\x03\xd5\x4f\x5b\xce\xbc\xd9\xc4\x8b\xe2\x14\x43\x0a\x18\x05\x29\x89\x50\x98\x07\x18\x65\x61\x0a\xa8\x60\x98\xe1\x34\x49\x7d\xc0\xb9\x77\xf9\xbe\x6f\xc1\x75\x09\x66\xa3\xd2\x92\x57\xcb\xb6\xe9\x1e\xa4\x12\xd5\x83\xa8\xed\x7f\x5d\x4c\x26\x93\xc9\x5b\xfd\x77\x32\xf1\x36\xb5\xcd\x9b\x1d\x57\x8e\x6b\x8d\x23\x41\x92\xfa\x3e\x09\x29\xca\x68\x1e\xa1\x10\x62\x86\x08\x8e\x33\x14\x51\x3f\x0b\xd2\xb4\x20\x10\xa5\xf5\x6d\x9d\xdd\xdf\x18\x54\x9a\x17\x1c\xe4\xf1\xce\xfd\xcf\x5b\xeb\xdb\x82\xfe\x93\x94\xdb\x7e\x18\x27\xe0\x8b\xd7\x8d\x41\xfb\x2d\xd4\xee\xf8\xfd\x3c\xf0\xea\x73\xa5\x4d\x9a\xd6\x50\xe9\x9e\x5b\xfe\x89\x5d\xd7\x45\xc1\x4b\x4e\x34\xaf\x13\x35\x76\xd7\xaf\xfc\x05\xaa\xef\x64\x6d\x8f\xe6\x00\x9a\x57\xa7\xac\x8f\x27\xad\x0b\x28\x61\xb3\x12\x15\x7c\xdf\xae\xf3\x3a\xcf\x4e\xe8\x1d\xe1\xa5\xb1\xef\xff\xfb\xa5\x02\x3d\xc4\xfc\x21\x97\xa4\xe2\xaa\x0e\xf3\xa9\xe2\xba\xd3\x13\xa6\x97\x7a\xf6\x63\x7f\xa4\x39\x24\x85\x1f\x23\x0c\x09\x46\x61\xec\x17\x88\x04\x2c\x47\x2c\x63\x09\x8d\x43\x92\x16\x7e\xd2\x29\xe3\xe0\x24\x67\x92\x7a\xd8\x9e\x47\x3d\xeb\x6f\x5c\xd1\x6f\xc6\x23\xff\xd2\x0d\x3a\x71\x55\x0f\xd9\x74\xd6\x09\xc8\x35\x63\x12\x94\x6a\x9d\x67\x6d\xc3\xe6\x6b\xd7\x1c\xe5\xc9\xfd\x28\xee\xbb\xc7\x98\x9f\x5b\xd3\x7a\x03\x8a\x4a\xbe\x39\x04\x6c\x19\xe7\x07\xbe\x5c\x69\x35\x1c\x65\x59\xaf\x3f\x6a\xa2\x87\x0d\xde\x73\xf0\xf9\xb2\xbb\xe9\xab\x28\x59\x6f\x52\x9d\x3b\x4a\x4e\xa1\xa2\xd0\x01\x77\x1a\xe5\x00\x38\x55\xd5\x03\xa4\x43\x12\x83\x1c\xee\x06\x57\x13\x4a\xf7\xf9\x76\xdc\xbc\xb7\xdb\x2a\x77\x30\xb5\x93\xe3\xbe\xcf\x5e\x16\xa2\x2d\xf4\xc9\x88\x86\x23\x65\x05\x18\x07\xc8\xc7\x08\x07\x0b\x1f\xcf\xb0\xf9\x45\x38\x9a\x61\x7c\x0c\xbe\xc6\x77\x38\xab\x7f\xcd\xef\xf0\xfa\x43\x48\xf6\x1e\x64\xcb\xcd\x36\x6e\x4e\x34\x2c\x85\x7c\x3d\x87\x7b\x00\x25\xb6\x92\x42\x3b\x29\x07\x53\xe3\x77\x7b\xcd\x42\xdb\xc7\x58\xf9\x59\x92\x6e\x41\xfa\x45\xf0\x24\x94\x9d\xb9\xb2\x46\xff\x60\x40\xc0\x7e\xb2\x17\x6d\x26\xb4\xab\xa6\x93\x95\xce\x32\xd2\x38\x36\x3a\xc3\x44\xe3\x58\x68\x24\xdf\xdc\x4b\x50\x20\x5f\xea\xb3\x3e\xbf\xb4\x89\xe3\xfd\x91\xd0\x87\x38\x53\x3f\x40\x0e\x2a\x30\x40\xdc\x80\x3e\xa8\x53\xdb\xfd\xbe\x97\x5f\xb8\xad\x0e\x05\x2f\xa1\xd1\x21\xf0\x23\x4c\x43\x92\x23\x3c\x35\x3a\x04\x11\x41\x69\x12\x04\x28\x29\xf2\xe9\x34\xce\xf2\x04\xb7\x74\xa8\xde\x69\xa5\x9f\x0e\xc2\x51\xa0\xda\xf6\xc8\xff\xed\x46\x66\x16\x6f\x49\x0e\xa5\x6b\x87\xa1\x90\xb9\x04\xd3\xe1\xdd\xa6\xf9\x20\x8b\xd8\x78\xa4\x5d\x6e\x73\xd7\x51\x24\x5a\xd7\x9c\x12\x88\x01\xe1\x77\x9f\x34\x4e\x99\x38\xb3\xcf\x26\x16\x83\x37\xe0\x79\xc1\x18\x2b\x19\xae\xd7\x9f\x45\x38\x06\x5e\xb8\xc5\x63\x9c\x7c\x74\xee\xb6\xd6\x64\xbe\x02\xfa\x8f\xda\xae\xdd\x02\x46\x0f\x88\xa6\xa7\x59\x11\x4c\xf3\x30\xce\x51\x9c\xc7\x21\x0a\x49\x88\x51\x1a\x06\x05\x8a\x08\x9b\xc6\xd3\x3c\x8f\xc1\xf7\xbb\xca\xda\x9c\x60\x15\xc1\xc6\xd8\x1f\xdf\x13\x92\x6b\xfc\xfe\x22\xe4\x9a\x34\x93\x6c\xed\xec\xb9\x58\x6f\x84\xe2\x66\xa6\x6f\xe1\xc5\x3d\x01\x5f\x89\xba\xe3\xeb\xa6\x73\xb5\xdc\xc2\x60\x40\xee\x04\x33\xe5\x65\xee\x24\x7d\x78\x5a\xec\xf3\xe2\x8a\xf6\x7e\x9f\xfb\x11\x2f\xa1\x9a\x7d\xd4\x90\x04\xdc\x8c\x3a\x88\x65\x34\xb3\xda\xd1\xd6\x2a\x8f\x64\x58\x77\x06\x9e\x36\xa5\x20\xcc\x34\xfb\x56\x0d\x82\x7b\xd4\x42\x92\x25\x38\xac\xb7\x44\xe9\x1b\xf1\xa3\x32\x07\xfc\x0f\x2c\xb7\x00\xba\xaa\x38\x25\xe5\xb5\xd6\x92\xe7\x5b\x0d\x6a\x7c\xe9\x0e\x91\xdc\x0a\xda\xe8\xb8\xb7\xd2\x7a\xa3\x66\x57\x57\x5a\x88\x52\x7d\xe2\xa0\x8b\x4f\x42\x2e\xaf\x56\x7a\x5d\x5e\xc9\x82\x4e\xb3\x34\xf6\x6c\x67\xdc\x97\x44\x17\x42\xae\xbb\x01\xab\xae\xb1\x19\xea\x22\xc8\xa6\x59\x84\x7d\x14\xe4\x01\x33\x42\x45\x51\xe6\x67\x09\xc2\x8c\x90\x28\xa1\x34\x8f\x83\xf6\x50\xf7\x8f\x71\x3f\x1a\x7a\x40\xcb\xbb\xa1\x87\x98\x0b\x65\xa1\xb2\xdd\xbb\x00\x5f\xec\x2e\xfe\x0b\x00\x00\xff\xff\x1f\x46\x3f\x3c\x9b\x10\x00\x00")

func messagesBodyMetadataUpdateRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataUpdateRequestJson,
		"messages/body/metadata/update/request.json",
	)
}

func messagesBodyMetadataUpdateRequestJson() (*asset, error) {
	bytes, err := messagesBodyMetadataUpdateRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/update/request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataUpdateRequest_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x31\x8e\x83\x40\x0c\x45\x7b\x4e\x81\x86\x2d\x97\xf9\x5b\x6c\xc5\x65\x90\x99\x31\x30\xac\x60\x58\xdb\x08\x45\x51\xee\x1e\x11\x48\x9f\xd6\xef\xd9\xcf\xf7\xa2\x2c\x5d\x8a\xae\x29\xdd\x68\xb6\x6a\x03\xec\xfb\xee\xa7\xa4\xc1\x53\xf0\xdb\x1f\x24\xaa\x42\xc3\xc8\x33\x61\x66\x55\x1a\x58\xd1\xe5\x78\xc3\xcc\x46\x91\x8c\xb0\xad\x91\x8c\x21\xfc\xbf\xb1\x5a\x7b\xca\x7e\xd2\xbc\xb8\xef\xe3\xfe\xd7\x39\x79\x47\x1a\xe0\x60\xf5\xe5\x65\x19\x10\x85\x7a\xab\x7f\x7e\xaf\x50\x75\xed\x09\xf7\x1f\x7e\x26\xac\x4c\x12\xc6\x36\x77\x13\x07\x7b\xc5\x51\x21\x72\x9f\x96\x64\x29\x2f\x8a\x93\xb8\xe2\x51\x3c\x03\x00\x00\xff\xff\x70\x8e\x7d\xb5\xf5\x00\x00\x00")

func messagesBodyMetadataUpdateRequest_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataUpdateRequest_schemaJson,
		"messages/body/metadata/update/request_schema.json",
	)
}

func messagesBodyMetadataUpdateRequest_schemaJson() (*asset, error) {
	bytes, err := messagesBodyMetadataUpdateRequest_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/update/request_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyVocabularyPatchReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x4b\xc3\x40\x10\x85\xef\xf3\x2b\x1e\x14\xc4\x1e\x8c\xf7\x7a\x2a\x2a\x88\x60\x2d\xb6\x78\x11\x71\x27\xc9\xb4\x59\x49\x67\xd7\x9d\x0d\x98\x7f\x2f\x69\x0a\xc6\xe2\x65\xe1\xed\xbc\xf7\xbd\x37\xc3\x6b\xa8\xb8\xec\x5a\x4e\x3d\xd6\x9c\xab\x86\xe8\x49\xcc\x78\x2f\xd8\xf6\x51\x16\x70\xbf\x86\xe3\xdd\x15\x44\x77\x62\x55\xf2\xa5\x18\x18\x8f\x9b\xe7\x15\x22\xf7\x6d\xe0\x1a\xbb\x90\xc0\x53\x64\x6e\x38\xc3\x1b\xf6\xa2\x92\x38\x4b\x8d\xba\x4b\x5e\xf7\x60\x85\x5b\x2f\xb7\xb7\x0f\x0e\x21\x66\x1f\xb4\x20\x9a\xcd\xb0\xa9\x44\x39\xf9\x60\x44\x57\xd8\x88\x66\xe4\x00\xeb\xca\xb1\x2f\xd9\x20\x35\x64\xbf\x3b\xa1\xff\x94\x35\x6c\x28\x45\x14\x71\x18\x2a\xf5\x88\x7c\x91\xaf\x4e\x2c\x0f\xc0\xfb\x6f\x3e\xc4\x56\x16\x17\x5a\x5a\xbc\x99\xbe\x6f\x2e\x8d\xb6\xe2\xd3\x82\xba\xf7\xcb\xa9\x9c\x0f\x5b\xaa\x46\x0e\xfc\x4f\xf2\x2c\xff\x61\x47\xe3\x19\x66\xfa\x3b\x3f\xad\xb2\x18\xd4\x84\x68\x75\xbd\x2c\xe8\x27\x00\x00\xff\xff\xe9\x53\x6e\x25\x88\x01\x00\x00")

func messagesBodyVocabularyPatchReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyVocabularyPatchReadmeMd,
		"messages/body/vocabulary/patch/README.md",
	)
}

func messagesBodyVocabularyPatchReadmeMd() (*asset, error) {
	bytes, err := messagesBodyVocabularyPatchReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/vocabulary/patch/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyVocabularyPatchRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x2a\xcb\x4f\x4e\x4c\x2a\xcd\x49\x2c\xaa\xf4\x4c\x51\xb2\x52\x30\xd4\x41\x15\xf4\x4b\xcc\x4d\x55\xb2\x52\x50\x72\x54\x08\x48\x2c\x49\xce\x48\x4d\x51\x08\x83\xcb\x29\xa1\xa9\x0d\x49\x2d\xca\x2d\x56\xb2\x52\x88\xe6\x52\x50\x50\x50\x50\x02\x71\x15\xfc\xf3\x52\xc1\xca\x60\xfc\x90\xf2\x7c\x54\x7e\x46\x51\x6a\xaa\x12\x97\x82\x42\x2c\x57\x2d\x17\x20\x00\x00\xff\xff\xde\x07\xab\x21\x91\x00\x00\x00")

func messagesBodyVocabularyPatchRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyVocabularyPatchRequestJson,
		"messages/body/vocabulary/patch/request.json",
	)
}

func messagesBodyVocabularyPatchRequestJson() (*asset, error) {
	bytes, err := messagesBodyVocabularyPatchRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/vocabulary/patch/request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyVocabularyPatchRequest_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x51\xb1\x6e\xe3\x30\x0c\xdd\xfd\x15\x82\x2e\x63\x62\xde\x70\x93\xf7\x1b\xb2\x1c\x0e\x68\xb7\xa2\x28\x68\x8b\x4e\x94\xc6\x92\x43\x52\x0d\x8c\x22\xff\x5e\xc8\xb1\xd3\xa0\x48\x80\x2e\x5d\x34\x3c\xf1\xf1\x3d\xbe\xf7\x5e\x18\x63\xbd\xb3\x95\xb1\x5b\xd5\x5e\x2a\x80\xe3\xf1\x58\xee\xbc\x34\x25\x36\x65\x7a\x05\x76\x22\x20\xcd\x96\x3a\x84\x8e\x44\x70\x43\x02\x75\x74\x03\xbc\xc5\x06\xeb\xb4\x47\x1e\x20\xf5\x0e\x95\x80\xe9\x90\x48\xf4\xe5\x3c\x5e\xee\x24\x06\xf8\x65\x97\x59\x63\x71\xc6\x66\xa1\x0a\x20\xff\xae\xa6\xc9\xc8\x1b\x70\x8c\xad\xae\x7e\xff\x99\xc4\x26\x9e\x0e\x3d\x65\x52\xac\x77\xd4\xe8\x19\xeb\x39\xf6\xc4\xea\x49\x6c\x65\xf2\x05\xc6\xd8\x4f\x33\x6b\x77\x41\xaf\xf8\x21\x75\x35\xb1\x1d\xe1\xd3\xf2\x2b\xe7\x1f\x76\x74\xcd\x5a\x30\xb5\xdf\xcc\x24\x0b\xc8\x74\x2a\x38\x6a\x7d\xf0\xea\x63\x10\x08\x31\xfc\xed\x7a\x1d\x1e\x94\x7d\xd8\xdc\x53\x7e\x24\xee\xe4\x96\x61\x64\xc6\xc1\x2e\x67\x38\x05\x7f\x48\xb4\x56\x1a\xa7\x95\x13\x5d\xbe\xfc\x04\xce\x2b\x7e\xd0\xbf\x31\xa7\x62\x7e\xc7\x5b\x6c\xae\xdc\x33\xe5\xcc\x9f\x6e\x34\x71\x3b\xe9\x3b\x29\x14\xc6\x3c\x8f\x4b\xd1\xb9\xd1\x04\xee\xff\x5f\x57\xdd\xe2\x5e\xa8\x38\x15\x1f\x01\x00\x00\xff\xff\xa7\x6f\x52\x03\xb5\x02\x00\x00")

func messagesBodyVocabularyPatchRequest_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyVocabularyPatchRequest_schemaJson,
		"messages/body/vocabulary/patch/request_schema.json",
	)
}

func messagesBodyVocabularyPatchRequest_schemaJson() (*asset, error) {
	bytes, err := messagesBodyVocabularyPatchRequest_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/vocabulary/patch/request_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyVocabularyReadReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x4f\x4b\xf3\x40\x10\xc6\xef\xfb\x29\x1e\x28\xbc\xbc\x3d\xd8\x0f\x50\x4f\x42\x7b\x11\x54\x68\x8a\x17\x11\x77\x92\x8c\xc9\x4a\xb2\xbb\x9d\xd9\xa8\xf9\xf6\x12\x53\xe8\xd2\x0a\x7a\x59\xd8\x79\xfe\xfd\x16\x78\x0c\x15\x95\x43\x47\x32\x62\xc7\x54\x1b\x73\xc7\xaa\xd4\x30\xf6\x63\xe4\x35\xec\x49\x9f\x64\xbb\x32\x66\xc3\x5a\x89\x2b\x59\x41\xb8\x2d\x1e\xee\x11\x69\xec\x02\xd5\x78\x0d\x02\xca\x0b\x53\x4b\x09\x4e\xd1\xb0\x67\xa1\xc4\x35\xea\x41\x9c\x6f\x40\xb0\xbb\xed\xcd\xc6\x22\xc4\xe4\x82\x5f\x19\xb3\x58\xa0\xa8\xd8\x93\xb8\xa0\xc6\x5c\xa1\x60\x9f\x50\x8e\xd0\xa1\x9c\xd7\x44\xf1\xd1\xb2\x07\x75\x1d\xf6\x2c\xbd\x82\x84\x8f\x93\x8d\x7b\x67\x9f\x0f\x4f\x92\xf0\x61\x70\xc2\xf5\x5c\xbe\xe3\xc3\xc0\x9a\xa6\xea\xed\x27\xf5\xb1\xe3\xf5\x3f\x5f\x6a\xbc\xce\xdf\x27\x2b\xb3\x6d\xf5\xa6\xc1\xdb\xe7\xff\xf9\x77\x39\x51\x55\x2d\xf7\xf4\x43\xf2\x2c\xff\xa2\xdf\xc6\xb3\x9a\xfc\xba\x3c\x52\x69\x0c\x5e\xf9\x77\xac\xd9\x77\x2a\xcc\xfe\x7f\x04\x9b\x13\x17\x64\x97\xe7\xa5\xf9\x0a\x00\x00\xff\xff\x8e\x74\x2e\x09\x16\x02\x00\x00")

func messagesBodyVocabularyReadReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyVocabularyReadReadmeMd,
		"messages/body/vocabulary/read/README.md",
	)
}

func messagesBodyVocabularyReadReadmeMd() (*asset, error) {
	bytes, err := messagesBodyVocabularyReadReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/vocabulary/read/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyVocabularyReadRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x2a\xcb\x4f\x4e\x4c\x2a\xcd\x49\x2c\xaa\xf4\x4c\x51\xb2\x52\x30\xe4\xaa\xe5\x02\x04\x00\x00\xff\xff\xbe\x10\x07\xc5\x18\x00\x00\x00")

func messagesBodyVocabularyReadRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyVocabularyReadRequestJson,
		"messages/body/vocabulary/read/request.json",
	)
}

func messagesBodyVocabularyReadRequestJson() (*asset, error) {
	bytes, err := messagesBodyVocabularyReadRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/vocabulary/read/request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyVocabularyReadRequest_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xb1\x4e\xc4\x30\x0c\x86\xf7\x3c\x85\x15\x18\xb9\x9a\x81\xa9\x6f\xc0\xc6\x8e\x10\x72\x13\xdf\x5d\x4a\xdb\x14\x3b\xa1\xaa\x50\xdf\x1d\xa5\x2d\xd0\xe1\xd6\xdf\xff\xe7\xef\xff\x36\x00\x36\x78\x5b\x83\xbd\xa6\x34\x6a\x8d\x38\x4d\x53\xd5\x06\x75\x15\xb9\x2a\x7f\xa0\x78\x55\x54\x77\xe5\x9e\xb0\x67\x55\xba\xb0\x62\x13\xfd\x8c\x5f\xd1\x51\x93\x3b\x92\x19\x85\xc9\xa3\xf0\x67\x66\x4d\xef\x5b\xb9\x6a\x35\x0e\x78\x67\x1f\x8a\xe1\x7e\xcb\x7e\x35\x35\x62\xb9\x9e\xf6\x66\x94\x0b\x7a\xa1\x73\x3a\x3d\x3e\xed\xaa\x9d\x4b\xf3\xc8\x05\x8a\x4d\xcb\x2e\x6d\xd9\x28\x71\x64\x49\x81\xd5\xd6\x50\xf6\x03\xd8\xff\x29\xcf\xfe\x2f\x3d\xf0\x43\xee\x1b\x16\xbb\xc6\x8b\x01\x58\xd6\x4f\x65\x70\x10\x2e\xc4\xeb\x8d\x3f\x06\xe0\x6d\xed\x91\xf7\x21\x85\x38\x50\xf7\x72\x74\x9f\xa9\x53\x36\x8b\xf9\x09\x00\x00\xff\xff\x6d\xf6\xae\x70\x44\x01\x00\x00")

func messagesBodyVocabularyReadRequest_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyVocabularyReadRequest_schemaJson,
		"messages/body/vocabulary/read/request_schema.json",
	)
}

func messagesBodyVocabularyReadRequest_schemaJson() (*asset, error) {
	bytes, err := messagesBodyVocabularyReadRequest_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/vocabulary/read/request_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyVocabularyReadResponseJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x2a\xcb\x4f\x4e\x4c\x2a\xcd\x49\x2c\xaa\xf4\x4c\x51\xb2\x52\x30\xd4\x41\x15\x0c\x49\x2d\xca\x2d\x56\xb2\x52\x88\xe6\x52\x50\x50\x50\x50\x02\x71\x15\xfc\xf3\x52\x95\x74\x90\xf8\x21\xe5\xf9\xa8\xfc\x8c\xa2\xd4\x54\x25\x2e\x05\x85\x58\xae\x5a\x2e\x40\x00\x00\x00\xff\xff\xe1\x26\xf3\x1b\x65\x00\x00\x00")

func messagesBodyVocabularyReadResponseJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyVocabularyReadResponseJson,
		"messages/body/vocabulary/read/response.json",
	)
}

func messagesBodyVocabularyReadResponseJson() (*asset, error) {
	bytes, err := messagesBodyVocabularyReadResponseJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/vocabulary/read/response.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyVocabularyReadResponse_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x31\x4f\xfb\x30\x10\xc5\xf7\x7c\x0a\xcb\xff\xff\xd8\xe6\x18\x98\xb2\x33\x74\x43\x82\x0d\x21\x74\x89\x2f\xad\x4b\x63\xbb\x77\x36\x55\x84\xfa\xdd\x91\x13\xa7\x54\xa8\x48\x2c\x1e\xde\xdd\xef\x9e\xdf\xfb\xac\x94\xd2\xd6\xe8\x46\xe9\x5d\x8c\x41\x1a\x80\xd3\xe9\x54\xef\xad\x74\x35\x76\x75\x7a\x07\x36\x22\x20\xdd\x8e\x06\x84\x81\x44\x70\x4b\x02\xad\x37\x23\x7c\xf8\x0e\xdb\x74\x40\x1e\x81\x09\x0d\x30\x49\xf0\x4e\xe8\x6d\xde\xae\xf7\xe2\x1d\xfc\xd3\xab\x6c\xf1\x7f\xd6\x16\x9f\x06\x20\x4f\xd7\x65\xd3\xf3\x16\x0c\x63\x1f\xd7\x77\xf7\xc5\xab\x70\x71\x0c\x94\x21\xdf\xee\xa9\x8b\xb3\x16\xd8\x07\xe2\x68\x49\x74\xa3\x72\x00\xa5\xf4\xf7\x5f\x36\xe6\xa2\x5e\xf1\x2e\x0d\x2d\xb1\x9e\xe4\xf3\xea\x27\xf3\x4c\x3c\xc8\x2d\x0c\x99\x71\xd4\xab\x45\x4e\xce\x1e\x13\x6d\x22\x4d\xdb\x91\x13\x5d\x46\xb6\x88\xcb\x89\x9c\x99\xa9\xff\x63\xb1\xd9\x4f\x4a\x61\x60\xa8\xb7\xce\x46\xeb\x9d\x80\xf3\xee\x61\x08\x71\x7c\x8a\x6c\xdd\x56\x97\xe3\xe7\x6a\x79\xa7\x2c\x9a\xe9\x98\x2c\x53\x4e\xfe\x72\xa3\x8f\x5f\xf2\x56\x4a\xbd\x4e\x38\x1a\x33\xd9\xe1\xe1\xf1\xba\xda\x1e\x0f\x42\xd5\xb9\xfa\x0a\x00\x00\xff\xff\x73\x5d\x27\x3f\x24\x02\x00\x00")

func messagesBodyVocabularyReadResponse_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyVocabularyReadResponse_schemaJson,
		"messages/body/vocabulary/read/response_schema.json",
	)
}

func messagesBodyVocabularyReadResponse_schemaJson() (*asset, error) {
	bytes, err := messagesBodyVocabularyReadResponse_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/vocabulary/read/response_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesHeaderHeaderJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xc1\x8e\x9b\x30\x10\xbd\xf3\x15\x96\xaf\xad\x23\xdb\x31\x38\x70\xab\xd2\x55\xdb\x43\x7b\xd8\xe6\x56\xf5\x30\xd8\x43\xd6\x12\x60\x6a\x3b\x55\x57\x55\xfe\xbd\x32\x50\x85\xec\x29\x12\x1a\x89\x79\xbc\x79\x6f\xde\xf0\xb7\x20\x84\x0e\x18\x23\x9c\xf1\x8b\xa5\x0d\xa1\xa6\xd2\xba\x52\xa2\x65\x46\x73\x64\x0a\x74\xc7\xea\x03\xd7\x0c\x41\x72\xad\xa4\xd9\xab\x0a\xe9\xfb\x4c\x33\x3e\x04\xec\x21\x39\x3f\x2e\x54\x55\x72\xa1\xf6\x1a\x98\xc1\xba\x64\x6a\xaf\x25\x6b\xb1\x34\x4c\x6a\x6d\xda\x0a\x0e\xb2\xc2\x76\xa1\xae\x8a\xc7\x1e\x62\xcc\xcc\xa3\x1f\x06\x18\xed\x1d\x78\x7a\x9d\x30\x63\x5f\x31\x81\x85\x04\xc7\x80\x90\x56\xe9\x80\xe9\x12\xc6\x0f\xd6\x06\x5c\x06\xc4\x14\xdc\x78\xbe\xe7\xbb\xc1\x8d\xe7\x8c\xe6\x25\x09\xa1\xd3\xa5\xed\x5d\x7c\x41\x7b\x72\x03\xc6\x04\xc3\x94\x99\x92\x73\xc5\xf8\x81\x71\x71\x12\xbc\xe1\xf9\x61\x73\x9d\x87\x11\x42\xf1\xcf\xe4\xc2\xbc\xe5\x83\xbc\x82\x90\xeb\xd6\xc8\x77\xfc\x75\xc1\xd1\xe0\xcd\x49\xbc\x75\x68\xa9\x39\x96\xca\x22\xb3\x16\x5b\xa6\x34\xd4\xac\xad\x64\xcd\x24\x08\x34\xb2\x3b\x94\x5a\x56\xff\xad\x4c\x3e\xba\x6c\x84\x36\x44\xac\xad\xe4\x13\xf4\xf9\xfd\xad\xea\x67\x17\x93\x0f\xaf\xb4\x21\x3f\xe6\x2f\x17\xe9\x8c\x83\x79\x71\xe3\x7a\xed\x4d\x6e\x5b\x70\x93\x6c\x67\x05\x36\x75\xc7\x65\xd3\x4a\xe0\x4d\xc9\x2b\xdd\x74\x5d\xd7\xbd\x29\xb7\x11\xe9\xe1\x94\x08\xb9\x16\x84\xfc\x9c\x5d\xff\xc6\x10\x97\xcd\xa8\xd8\xc9\xdd\x9e\x4d\x01\x77\x01\x7b\x84\x88\x4c\xbc\x6b\x2f\x6e\xd7\x5b\x26\x97\x0b\x63\x08\x3e\x1c\xbd\x9d\x03\xfc\xf4\xf4\xed\xe9\xf9\x99\x73\xb1\xc1\x3e\x62\x34\xc1\x4d\x6b\x56\x77\x7f\xc7\x19\x47\x0c\x90\x7c\xd8\x00\xc5\xb5\xf8\x17\x00\x00\xff\xff\x92\xd2\x69\xb9\x09\x03\x00\x00")

func messagesHeaderHeaderJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesHeaderHeaderJson,
		"messages/header/header.json",
	)
}

func messagesHeaderHeaderJson() (*asset, error) {
	bytes, err := messagesHeaderHeaderJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/header/header.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesHeaderHeader_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\x31\x0e\x02\x21\x10\x45\xfb\x3d\x05\x41\x4b\x97\x6f\x61\xc5\x65\x0c\x81\x61\x61\xcd\x82\x61\x30\x14\xc6\xbb\x9b\xcd\x42\x61\x69\x35\x93\x3f\x7f\x5e\xde\x7b\x12\x42\x46\x27\xb5\x90\xa1\xd6\x27\x6b\xa0\xb5\xa6\xd6\xc8\x56\x19\xab\x5e\x0f\x14\xc7\x0c\xb6\x81\x36\x83\x8d\x98\xcd\x42\x3c\x96\xfb\x91\xab\x95\x73\xc2\x49\x5e\x76\xd8\xf9\xc8\x06\x51\x03\xfb\x75\xee\xcd\x5c\x16\xb8\x62\x7c\x9d\xaf\xb7\x4e\x1d\x7f\x85\xfc\xbf\x1a\x81\x8c\xa3\xd2\xc7\xaf\x0c\x1c\xf9\x98\x62\x8d\x39\x8d\x9e\x9c\x3e\xd3\x37\x00\x00\xff\xff\x70\x9c\x4a\x24\xf0\x00\x00\x00")

func messagesHeaderHeader_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesHeaderHeader_schemaJson,
		"messages/header/header_schema.json",
	)
}

func messagesHeaderHeader_schemaJson() (*asset, error) {
	bytes, err := messagesHeaderHeader_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/header/header_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesMessageJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x4b\x73\xdb\x38\x12\xbe\xfb\x57\xb0\x78\x0e\x6c\x80\x6f\xfa\xb4\x59\xc5\x89\xb3\x6b\x67\x5d\xb6\xb3\x97\x54\x0e\x20\xd0\x94\x30\x43\x12\x1a\x00\x72\xe2\x99\xd2\x7f\x9f\xe2\x4b\xe6\x03\xa2\xe5\x39\x4c\x4d\x55\x2a\x96\xd0\x5f\x03\xfd\xfc\xba\xf5\xc7\x99\xe3\xb8\x25\x68\x4d\xd7\x70\x0d\x94\x83\x72\x2f\x9d\xfa\xf0\xe5\xf8\x33\x77\x2f\x1d\x17\x72\xca\x48\x14\x50\xc4\xd2\x8c\xa3\x20\x04\x8c\x92\x34\x25\x88\xb0\x10\x87\x10\xe4\x41\xc8\x3c\xf7\x5d\xab\xc8\xa4\x52\x50\x50\x23\x64\xd5\x2a\x07\x21\x26\x81\x1f\x53\xc4\x20\x0d\x51\xe0\xc7\x1e\xca\x20\x64\xc8\x8b\x63\x96\x45\x34\xf1\x22\xc8\x7a\xe5\xee\xd5\x55\x41\xb5\xae\x75\x57\xb2\x2c\x69\xc5\x27\xe2\xc7\xe7\x2d\xd4\xd2\x5b\x30\x94\x53\x43\x57\x0a\xa8\x81\x1e\xa4\xc0\xec\x54\xf5\x9e\x73\x05\xed\x25\xda\x28\x51\xad\xa7\x77\x88\x52\x54\x6b\x7d\x70\xd8\x71\xdc\xed\x2e\x2b\x84\xde\x00\x7f\x14\x25\x68\x43\xcb\x6d\xad\xed\x61\x1c\x20\x9c\x20\x4c\x1e\x09\xbe\xc4\xf5\x3f\xd4\xfc\xdf\x5d\xe8\x38\x2e\xfc\xdc\x0a\xd5\x78\x7c\xa2\x66\xa3\xb8\x1f\x1b\xf4\x00\xbf\xed\xa0\x62\x30\xb4\x48\xbf\x9c\xb9\x11\xe5\x09\x49\x03\x8e\x38\xe1\x18\x05\x7e\x92\x22\x1a\x05\x1c\xb1\xd8\xe7\x71\x44\x82\xc8\x67\xe9\x8b\x49\x5b\xa9\x45\x6d\x90\x7b\xe9\x90\xc3\xa1\x91\x86\x16\xf5\x89\xed\xfd\x6b\xa1\x8d\x54\xcf\xee\xa5\xf3\xad\xc3\xf7\x66\xd4\x18\xca\x36\xa2\xea\xaa\x61\x14\xcf\xa1\x78\x10\xf3\xee\xe4\x1c\x7e\xd2\x72\x5b\xc0\x39\x93\xe5\x50\xc1\xbc\x21\x4e\x8e\xb3\x6f\xfe\x7e\xef\xec\x7d\x02\xa5\x5b\xcf\x5c\x72\xee\x9d\xfb\x7d\x62\x41\x29\xa9\x56\x92\x37\xd1\xfa\x74\xf5\xe5\xea\xfe\x1e\x63\x32\x92\x7e\x00\xcd\x94\xd8\x76\x81\x99\x14\xc6\x1a\x2a\x50\xd4\x48\x35\x10\x9d\x75\x61\xea\x83\xf4\x6f\xc9\x9f\x5f\x7a\x44\x66\xbf\x00\x33\x5f\x77\xa2\x09\x4b\x18\x25\x18\x12\xc0\xc8\x4b\x68\x88\x82\xcc\xc3\x28\x0d\x12\x40\x39\xc7\x1c\x27\x71\x42\x00\x1f\xea\xbc\xd5\x7c\x14\xa6\x80\xb9\x21\xad\xf0\x0e\x94\x96\xd5\xbd\x6c\x10\x96\x94\x6c\x1b\xf9\xa0\x5a\x06\xa7\xbd\x49\x5e\x9c\x10\x42\x03\x86\x52\x96\x85\x28\x80\x88\x23\x8a\xa3\x14\x85\x8c\xa4\x5e\x92\xe4\x14\xc2\x64\x90\x96\x83\xfe\x67\x0e\x95\x11\xb9\x68\x08\xe1\xdb\x40\xee\x8c\x5e\xb3\x6a\xfc\x9f\x16\xbb\xb9\x53\x0b\x0a\x5d\x37\x93\x11\x6e\x3f\xf8\xf6\xdd\x62\xe1\x55\x65\xea\xe0\x95\x50\x99\x99\x89\xe4\x15\xdd\xf7\x79\x2e\x0a\x41\xbb\x2a\x78\x9b\xee\x27\xf1\x04\xd5\x17\x5a\x1e\xf3\xb0\x83\xad\xe6\xf5\x35\x92\x3f\xbc\x22\x7f\x84\x02\xb6\x1b\x59\xc1\x97\x5d\x99\x81\x5a\x06\xdf\x52\x51\x77\x75\xf7\xed\x5f\x15\x18\x1b\xea\x7f\x6a\x4d\x2b\xa1\x1b\xb7\xbf\x56\xc2\x4c\x2a\xa7\xae\xbb\x09\xe2\x50\x45\x49\x06\x71\x4e\x22\x84\x21\xc6\x28\x88\x48\x8e\xa8\xc7\x33\xc4\x53\x1e\xb3\x28\xa0\x49\x4e\xe2\x49\x9a\x67\x77\x2d\x84\x6c\x82\x9e\xd9\x35\x91\xff\x47\x68\xd6\xf0\x10\x99\x55\xd6\x10\xb6\xf8\xe0\x04\xdb\x57\xe0\x22\x68\x3e\x50\x8e\x16\xec\xcb\xe7\xfd\x80\xf3\x54\xdb\xca\xc4\x4a\x6a\x6d\xcf\x2f\xf2\x53\x0b\xb9\x17\xeb\x8d\xd1\x76\x4a\x50\x8d\xec\xc1\x50\x63\x6b\x8c\x99\xd9\xdf\xdf\x4d\x55\xaf\x65\xc1\x67\x3d\xbf\xa8\x57\x08\xd6\x0d\xa8\xa1\xca\xa4\xb0\x3a\xd0\x72\x0d\x74\xa0\x11\xf5\x58\x22\xbd\xb7\x9a\x41\x19\x6b\x73\xb3\x60\x45\x8b\xb1\xe7\xba\x13\x0e\x43\xb7\xfc\xf6\x52\x12\xeb\x5d\xc4\x9a\x1f\x4e\x0d\x1c\xe8\xd1\xc3\xd8\x43\x04\x23\xec\x0d\xa6\x5e\x38\xdc\x2b\x3a\x8d\x09\x3f\xda\x9e\xfc\x2f\x3c\xff\x90\x8a\x0f\x03\x30\x32\x7f\x8c\x5e\x51\x03\xeb\xf1\xa8\x5f\x40\xdf\x83\x96\x3b\xc5\x60\x1c\xb8\x4e\xd8\x7b\x33\x3e\xb5\x8e\x8f\x41\x1c\xc4\x09\xc3\x62\x00\x9a\xa7\xcc\xed\x37\xcc\x13\x62\x73\x5f\x43\x81\xff\xa3\x6c\x1a\x72\xf1\xf1\x09\xbf\xc0\x8a\x27\x30\xe2\xa9\x6c\xf8\x2a\x13\x9e\xca\x82\x6f\xe4\xba\x3b\x05\x1a\xd4\x53\x73\xeb\xd5\xd3\x98\xae\x86\x6b\xce\x14\xb6\x90\x9e\x19\xd6\x92\xa5\x19\xe6\x03\x98\x6e\x7e\x8e\x1d\xb2\xd9\xfc\x51\x1c\xcb\x55\x2e\x0a\xe8\xe7\x25\x90\x10\xb3\x80\x66\x08\xfb\xf5\xbc\x84\x90\xa2\x24\xf6\x3c\x14\xe7\x99\xef\x47\x69\x16\xe3\xd1\xbc\x6c\x74\xad\xb4\x37\xc1\x1c\x4d\x62\x23\x7d\x10\xbf\x4f\x7d\xad\x8f\x6f\x68\x06\xc5\x71\xad\x9a\xac\xda\x9f\x4f\x7c\x5a\x62\x6f\x66\x2b\x3b\x5f\x8d\x0b\xa3\x7e\xf3\x30\xc2\x46\xcf\x2d\x0f\x2f\xcb\x18\x9a\x2e\x68\x0b\x23\xec\x04\x6d\xfb\x20\xb3\xec\xbb\xa7\x0c\xb3\xd3\xc7\xd9\xd2\xa6\x6b\x1d\x6a\x16\x8b\x96\x06\xdb\xa9\xa3\x6d\x62\xc7\xd1\xdc\xad\x36\xc0\x7e\xd5\xbb\x72\x79\xd4\xb2\x0e\xd5\x77\x04\xcf\x3d\x3f\x0b\xa2\x0c\x45\x59\x14\xa0\x80\x06\x18\x25\x81\x97\xa3\x90\x72\x3f\xf2\xb3\x2c\x02\x42\xa6\xfb\x40\x7f\xc7\x91\x81\xdd\x8b\xa7\x74\xf0\xea\xaa\x50\x7b\xf1\x51\xaa\x92\xf6\xec\x70\xa4\x33\x56\xb2\xec\x7f\x44\xdf\xc0\xd3\x52\x0f\x5d\x53\x7d\x2b\xca\xbe\xee\x8d\xda\x81\xa5\xc9\x6e\x25\xaf\xcb\x80\x2f\x07\xee\x2f\xf4\xdc\xb1\xae\x5b\xf2\xff\xae\xcd\xcb\xc9\x5b\x5e\xc3\x6e\xda\x46\x2f\x4b\x2c\x6e\xf1\xef\x0d\x6c\x6e\xc7\x1f\xa9\x86\x93\x59\x7d\x39\x2e\x5f\xb7\x85\xa4\xbc\x6e\x95\x9d\xb6\x38\xfb\x60\xa4\xa2\x6b\x38\x2a\xbf\xa1\xda\x7c\x90\x3f\xaa\xfa\x92\xbf\x91\x4f\x1f\x81\x6d\x2a\xc1\x68\xf1\xde\x18\x25\xb2\x9d\x81\x29\x69\xbc\x9a\xdc\xce\xb3\x1b\xc9\xfa\x6d\xc3\xdd\x18\xb3\xd5\x97\x17\x17\x46\xca\x42\x9f\x0b\x30\xf9\xb9\x54\xeb\x8b\x8d\x29\x8b\x0b\x95\x33\x3f\x4d\xa2\xd9\x08\x6a\x6f\xb9\x2b\xa8\xc9\xa5\x2a\xa7\x01\xd0\x63\x71\x4f\x0e\xb9\x97\xfa\x69\x88\x09\xf2\x32\x8f\xd7\xe3\x92\xa1\x94\xa4\x31\xc2\x9c\xd2\x30\x66\x2c\x8b\xbc\x31\x39\x4c\x2f\x5a\x5a\x6e\x26\x50\xeb\x7e\x33\xc1\xac\xa4\xb6\x92\xe4\x7e\xbc\x18\x9c\xd5\x9f\xf6\x67\x7f\x06\x00\x00\xff\xff\x95\x5d\xcf\xc3\x44\x15\x00\x00")

func messagesMessageJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesMessageJson,
		"messages/message.json",
	)
}

func messagesMessageJson() (*asset, error) {
	bytes, err := messagesMessageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/message.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesMessage_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\x3f\x4f\xc3\x30\x10\xc5\x77\x7f\x0a\xcb\x30\xb6\x39\x06\xa6\x8c\x4c\x8c\xec\x08\x55\x87\x7d\x69\x1c\xda\x38\xdc\xb9\x8a\x2a\xd4\xef\x8e\xfc\x27\x88\x48\x59\x60\xb2\xf5\x7c\xf7\x7e\xef\xce\x5f\x4a\x6b\xe3\x9d\x69\xb5\xe9\x63\x9c\xa4\x05\x98\xe7\xb9\x19\xbc\xd8\x06\x6d\x73\xf9\x00\x76\x22\x20\xb6\xa7\x33\xc2\x99\x44\xf0\x48\xb2\x5c\x0e\x45\x6f\x06\x09\x23\xdc\x99\x5d\x32\xbb\x2f\xda\xe2\xd8\x02\xa4\xd7\x7d\xad\x0c\x7c\x04\xc7\xd8\xc5\xfd\xc3\x63\x75\xad\x7d\xf1\x3a\x51\x6a\x0a\xef\x03\xd9\x58\xb4\x89\xc3\x44\x1c\x3d\x89\x69\x75\x8a\xaa\xb5\xa9\xe8\x67\x42\x47\xfc\x23\x27\x30\x53\xf7\xd7\x39\xfa\xec\x52\x8f\xf5\x34\xe0\xa8\xf3\xa3\x8f\x3e\x8c\x4b\x9d\xc9\xa8\xdb\x6e\x15\xe4\x29\xb8\xeb\x3f\x63\x30\x09\x21\xdb\xfe\x50\x66\xde\x02\xd7\x6d\x14\xb0\xaa\x70\xc3\xf4\x79\xf1\x4c\xe9\xdb\x5e\xb7\xb6\xb2\x91\x50\x69\xfd\x96\x7b\xd1\xb9\xec\x8d\xa7\x97\xdf\xdb\xed\xf0\x24\xa4\x6e\xea\x3b\x00\x00\xff\xff\xfb\x6c\xc8\x66\x11\x02\x00\x00")

func messagesMessage_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesMessage_schemaJson,
		"messages/message_schema.json",
	)
}

func messagesMessage_schemaJson() (*asset, error) {
	bytes, err := messagesMessage_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/message_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"schemas/enumeration.json":                           schemasEnumerationJson,
	"schemas/header.json":                                schemasHeaderJson,
	"schemas/intellectual_asset.json":                    schemasIntellectual_assetJson,
	"schemas/material_asset.json":                        schemasMaterial_assetJson,
	"schemas/research_object.json":                       schemasResearch_objectJson,
	"schemas/types.json":                                 schemasTypesJson,
	"messages/body/metadata/create/README.md":            messagesBodyMetadataCreateReadmeMd,
	"messages/body/metadata/create/request.json":         messagesBodyMetadataCreateRequestJson,
	"messages/body/metadata/create/request_schema.json":  messagesBodyMetadataCreateRequest_schemaJson,
	"messages/body/metadata/delete/README.md":            messagesBodyMetadataDeleteReadmeMd,
	"messages/body/metadata/delete/request.json":         messagesBodyMetadataDeleteRequestJson,
	"messages/body/metadata/delete/request_schema.json":  messagesBodyMetadataDeleteRequest_schemaJson,
	"messages/body/metadata/read/README.md":              messagesBodyMetadataReadReadmeMd,
	"messages/body/metadata/read/request.json":           messagesBodyMetadataReadRequestJson,
	"messages/body/metadata/read/request_schema.json":    messagesBodyMetadataReadRequest_schemaJson,
	"messages/body/metadata/read/response.json":          messagesBodyMetadataReadResponseJson,
	"messages/body/metadata/read/response_schema.json":   messagesBodyMetadataReadResponse_schemaJson,
	"messages/body/metadata/update/README.md":            messagesBodyMetadataUpdateReadmeMd,
	"messages/body/metadata/update/request.json":         messagesBodyMetadataUpdateRequestJson,
	"messages/body/metadata/update/request_schema.json":  messagesBodyMetadataUpdateRequest_schemaJson,
	"messages/body/vocabulary/patch/README.md":           messagesBodyVocabularyPatchReadmeMd,
	"messages/body/vocabulary/patch/request.json":        messagesBodyVocabularyPatchRequestJson,
	"messages/body/vocabulary/patch/request_schema.json": messagesBodyVocabularyPatchRequest_schemaJson,
	"messages/body/vocabulary/read/README.md":            messagesBodyVocabularyReadReadmeMd,
	"messages/body/vocabulary/read/request.json":         messagesBodyVocabularyReadRequestJson,
	"messages/body/vocabulary/read/request_schema.json":  messagesBodyVocabularyReadRequest_schemaJson,
	"messages/body/vocabulary/read/response.json":        messagesBodyVocabularyReadResponseJson,
	"messages/body/vocabulary/read/response_schema.json": messagesBodyVocabularyReadResponse_schemaJson,
	"messages/header/header.json":                        messagesHeaderHeaderJson,
	"messages/header/header_schema.json":                 messagesHeaderHeader_schemaJson,
	"messages/message.json":                              messagesMessageJson,
	"messages/message_schema.json":                       messagesMessage_schemaJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"messages": &bintree{nil, map[string]*bintree{
		"body": &bintree{nil, map[string]*bintree{
			"metadata": &bintree{nil, map[string]*bintree{
				"create": &bintree{nil, map[string]*bintree{
					"README.md":           &bintree{messagesBodyMetadataCreateReadmeMd, map[string]*bintree{}},
					"request.json":        &bintree{messagesBodyMetadataCreateRequestJson, map[string]*bintree{}},
					"request_schema.json": &bintree{messagesBodyMetadataCreateRequest_schemaJson, map[string]*bintree{}},
				}},
				"delete": &bintree{nil, map[string]*bintree{
					"README.md":           &bintree{messagesBodyMetadataDeleteReadmeMd, map[string]*bintree{}},
					"request.json":        &bintree{messagesBodyMetadataDeleteRequestJson, map[string]*bintree{}},
					"request_schema.json": &bintree{messagesBodyMetadataDeleteRequest_schemaJson, map[string]*bintree{}},
				}},
				"read": &bintree{nil, map[string]*bintree{
					"README.md":            &bintree{messagesBodyMetadataReadReadmeMd, map[string]*bintree{}},
					"request.json":         &bintree{messagesBodyMetadataReadRequestJson, map[string]*bintree{}},
					"request_schema.json":  &bintree{messagesBodyMetadataReadRequest_schemaJson, map[string]*bintree{}},
					"response.json":        &bintree{messagesBodyMetadataReadResponseJson, map[string]*bintree{}},
					"response_schema.json": &bintree{messagesBodyMetadataReadResponse_schemaJson, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"README.md":           &bintree{messagesBodyMetadataUpdateReadmeMd, map[string]*bintree{}},
					"request.json":        &bintree{messagesBodyMetadataUpdateRequestJson, map[string]*bintree{}},
					"request_schema.json": &bintree{messagesBodyMetadataUpdateRequest_schemaJson, map[string]*bintree{}},
				}},
			}},
			"vocabulary": &bintree{nil, map[string]*bintree{
				"patch": &bintree{nil, map[string]*bintree{
					"README.md":           &bintree{messagesBodyVocabularyPatchReadmeMd, map[string]*bintree{}},
					"request.json":        &bintree{messagesBodyVocabularyPatchRequestJson, map[string]*bintree{}},
					"request_schema.json": &bintree{messagesBodyVocabularyPatchRequest_schemaJson, map[string]*bintree{}},
				}},
				"read": &bintree{nil, map[string]*bintree{
					"README.md":            &bintree{messagesBodyVocabularyReadReadmeMd, map[string]*bintree{}},
					"request.json":         &bintree{messagesBodyVocabularyReadRequestJson, map[string]*bintree{}},
					"request_schema.json":  &bintree{messagesBodyVocabularyReadRequest_schemaJson, map[string]*bintree{}},
					"response.json":        &bintree{messagesBodyVocabularyReadResponseJson, map[string]*bintree{}},
					"response_schema.json": &bintree{messagesBodyVocabularyReadResponse_schemaJson, map[string]*bintree{}},
				}},
			}},
		}},
		"header": &bintree{nil, map[string]*bintree{
			"header.json":        &bintree{messagesHeaderHeaderJson, map[string]*bintree{}},
			"header_schema.json": &bintree{messagesHeaderHeader_schemaJson, map[string]*bintree{}},
		}},
		"message.json":        &bintree{messagesMessageJson, map[string]*bintree{}},
		"message_schema.json": &bintree{messagesMessage_schemaJson, map[string]*bintree{}},
	}},
	"schemas": &bintree{nil, map[string]*bintree{
		"enumeration.json":        &bintree{schemasEnumerationJson, map[string]*bintree{}},
		"header.json":             &bintree{schemasHeaderJson, map[string]*bintree{}},
		"intellectual_asset.json": &bintree{schemasIntellectual_assetJson, map[string]*bintree{}},
		"material_asset.json":     &bintree{schemasMaterial_assetJson, map[string]*bintree{}},
		"research_object.json":    &bintree{schemasResearch_objectJson, map[string]*bintree{}},
		"types.json":              &bintree{schemasTypesJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
