// Code generated by protoc-gen-go.
// source: outbound/pb/rpc.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	outbound/pb/rpc.proto

It has these top-level messages:
	MetadataReadRequest
	MetadataReadResponse
	MetadataCreateRequest
	MetadataCreateResponse
	MetadataUpdateRequest
	MetadataUpdateResponse
	MetadataDeleteRequest
	MetadataDeleteResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MetadataReadRequest struct {
}

func (m *MetadataReadRequest) Reset()                    { *m = MetadataReadRequest{} }
func (m *MetadataReadRequest) String() string            { return proto.CompactTextString(m) }
func (*MetadataReadRequest) ProtoMessage()               {}
func (*MetadataReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MetadataReadResponse struct {
}

func (m *MetadataReadResponse) Reset()                    { *m = MetadataReadResponse{} }
func (m *MetadataReadResponse) String() string            { return proto.CompactTextString(m) }
func (*MetadataReadResponse) ProtoMessage()               {}
func (*MetadataReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type MetadataCreateRequest struct {
}

func (m *MetadataCreateRequest) Reset()                    { *m = MetadataCreateRequest{} }
func (m *MetadataCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*MetadataCreateRequest) ProtoMessage()               {}
func (*MetadataCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type MetadataCreateResponse struct {
}

func (m *MetadataCreateResponse) Reset()                    { *m = MetadataCreateResponse{} }
func (m *MetadataCreateResponse) String() string            { return proto.CompactTextString(m) }
func (*MetadataCreateResponse) ProtoMessage()               {}
func (*MetadataCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type MetadataUpdateRequest struct {
}

func (m *MetadataUpdateRequest) Reset()                    { *m = MetadataUpdateRequest{} }
func (m *MetadataUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*MetadataUpdateRequest) ProtoMessage()               {}
func (*MetadataUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type MetadataUpdateResponse struct {
}

func (m *MetadataUpdateResponse) Reset()                    { *m = MetadataUpdateResponse{} }
func (m *MetadataUpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*MetadataUpdateResponse) ProtoMessage()               {}
func (*MetadataUpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type MetadataDeleteRequest struct {
}

func (m *MetadataDeleteRequest) Reset()                    { *m = MetadataDeleteRequest{} }
func (m *MetadataDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*MetadataDeleteRequest) ProtoMessage()               {}
func (*MetadataDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type MetadataDeleteResponse struct {
}

func (m *MetadataDeleteResponse) Reset()                    { *m = MetadataDeleteResponse{} }
func (m *MetadataDeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*MetadataDeleteResponse) ProtoMessage()               {}
func (*MetadataDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func init() {
	proto.RegisterType((*MetadataReadRequest)(nil), "pb.MetadataReadRequest")
	proto.RegisterType((*MetadataReadResponse)(nil), "pb.MetadataReadResponse")
	proto.RegisterType((*MetadataCreateRequest)(nil), "pb.MetadataCreateRequest")
	proto.RegisterType((*MetadataCreateResponse)(nil), "pb.MetadataCreateResponse")
	proto.RegisterType((*MetadataUpdateRequest)(nil), "pb.MetadataUpdateRequest")
	proto.RegisterType((*MetadataUpdateResponse)(nil), "pb.MetadataUpdateResponse")
	proto.RegisterType((*MetadataDeleteRequest)(nil), "pb.MetadataDeleteRequest")
	proto.RegisterType((*MetadataDeleteResponse)(nil), "pb.MetadataDeleteResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Rdss service

type RdssClient interface {
	MetadataRead(ctx context.Context, in *MetadataReadRequest, opts ...grpc.CallOption) (*MetadataReadResponse, error)
	MetadataCreate(ctx context.Context, in *MetadataCreateRequest, opts ...grpc.CallOption) (*MetadataCreateResponse, error)
	MetadataUpdate(ctx context.Context, in *MetadataUpdateRequest, opts ...grpc.CallOption) (*MetadataUpdateResponse, error)
	MetadataDelete(ctx context.Context, in *MetadataDeleteRequest, opts ...grpc.CallOption) (*MetadataDeleteResponse, error)
}

type rdssClient struct {
	cc *grpc.ClientConn
}

func NewRdssClient(cc *grpc.ClientConn) RdssClient {
	return &rdssClient{cc}
}

func (c *rdssClient) MetadataRead(ctx context.Context, in *MetadataReadRequest, opts ...grpc.CallOption) (*MetadataReadResponse, error) {
	out := new(MetadataReadResponse)
	err := grpc.Invoke(ctx, "/pb.Rdss/MetadataRead", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rdssClient) MetadataCreate(ctx context.Context, in *MetadataCreateRequest, opts ...grpc.CallOption) (*MetadataCreateResponse, error) {
	out := new(MetadataCreateResponse)
	err := grpc.Invoke(ctx, "/pb.Rdss/MetadataCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rdssClient) MetadataUpdate(ctx context.Context, in *MetadataUpdateRequest, opts ...grpc.CallOption) (*MetadataUpdateResponse, error) {
	out := new(MetadataUpdateResponse)
	err := grpc.Invoke(ctx, "/pb.Rdss/MetadataUpdate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rdssClient) MetadataDelete(ctx context.Context, in *MetadataDeleteRequest, opts ...grpc.CallOption) (*MetadataDeleteResponse, error) {
	out := new(MetadataDeleteResponse)
	err := grpc.Invoke(ctx, "/pb.Rdss/MetadataDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Rdss service

type RdssServer interface {
	MetadataRead(context.Context, *MetadataReadRequest) (*MetadataReadResponse, error)
	MetadataCreate(context.Context, *MetadataCreateRequest) (*MetadataCreateResponse, error)
	MetadataUpdate(context.Context, *MetadataUpdateRequest) (*MetadataUpdateResponse, error)
	MetadataDelete(context.Context, *MetadataDeleteRequest) (*MetadataDeleteResponse, error)
}

func RegisterRdssServer(s *grpc.Server, srv RdssServer) {
	s.RegisterService(&_Rdss_serviceDesc, srv)
}

func _Rdss_MetadataRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetadataReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RdssServer).MetadataRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Rdss/MetadataRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RdssServer).MetadataRead(ctx, req.(*MetadataReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rdss_MetadataCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetadataCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RdssServer).MetadataCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Rdss/MetadataCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RdssServer).MetadataCreate(ctx, req.(*MetadataCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rdss_MetadataUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetadataUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RdssServer).MetadataUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Rdss/MetadataUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RdssServer).MetadataUpdate(ctx, req.(*MetadataUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rdss_MetadataDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetadataDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RdssServer).MetadataDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Rdss/MetadataDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RdssServer).MetadataDelete(ctx, req.(*MetadataDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Rdss_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Rdss",
	HandlerType: (*RdssServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MetadataRead",
			Handler:    _Rdss_MetadataRead_Handler,
		},
		{
			MethodName: "MetadataCreate",
			Handler:    _Rdss_MetadataCreate_Handler,
		},
		{
			MethodName: "MetadataUpdate",
			Handler:    _Rdss_MetadataUpdate_Handler,
		},
		{
			MethodName: "MetadataDelete",
			Handler:    _Rdss_MetadataDelete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "outbound/pb/rpc.proto",
}

func init() { proto.RegisterFile("outbound/pb/rpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4d, 0x0a, 0xc2, 0x30,
	0x10, 0x85, 0xa1, 0x88, 0x8b, 0x41, 0x5c, 0x44, 0xfb, 0x63, 0x97, 0x3d, 0x40, 0x0b, 0x7a, 0x02,
	0x51, 0x70, 0xe5, 0xa6, 0xe0, 0x01, 0x12, 0x33, 0x3b, 0x69, 0xc6, 0x26, 0xbd, 0x91, 0x07, 0x15,
	0x0c, 0x81, 0x8c, 0xc9, 0x76, 0x5e, 0xbf, 0x8f, 0xbe, 0x17, 0x28, 0xcd, 0xe2, 0x94, 0x59, 0x26,
	0x3d, 0x90, 0x1a, 0x66, 0x7a, 0xf6, 0x34, 0x1b, 0x67, 0x44, 0x41, 0xaa, 0x2b, 0x61, 0x77, 0x47,
	0x27, 0xb5, 0x74, 0x72, 0x44, 0xa9, 0x47, 0x7c, 0x2f, 0x68, 0x5d, 0x57, 0xc1, 0x9e, 0x9f, 0x2d,
	0x99, 0xc9, 0x62, 0x57, 0x43, 0x19, 0xee, 0x97, 0x19, 0xa5, 0xc3, 0x00, 0x34, 0x50, 0xfd, 0x07,
	0x29, 0xf2, 0x20, 0x9d, 0x47, 0x42, 0x90, 0x22, 0x57, 0x7c, 0x61, 0x16, 0x09, 0x81, 0x47, 0x8e,
	0x9f, 0x02, 0x56, 0xa3, 0xb6, 0x56, 0x9c, 0x61, 0x13, 0xff, 0xb9, 0xa8, 0x7b, 0x52, 0x7d, 0xa6,
	0x62, 0xdb, 0xa4, 0x81, 0x77, 0x89, 0x1b, 0x6c, 0x79, 0x17, 0x71, 0x88, 0xbf, 0x65, 0xc5, 0xdb,
	0x36, 0x17, 0xa5, 0x22, 0xdf, 0x90, 0x8b, 0xd8, 0x1c, 0x5c, 0xc4, 0x07, 0x89, 0x45, 0xbe, 0x37,
	0x17, 0xb1, 0x91, 0xb8, 0x88, 0xcf, 0xa4, 0xd6, 0xbf, 0x97, 0x3f, 0x7d, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xe7, 0x61, 0x61, 0x0e, 0x12, 0x02, 0x00, 0x00,
}
